<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="d6/d83/CMakeCXXCompilerId_8cpp">
    <title>CMakeCXXCompilerId.cpp File Reference</title>
<para>Include dependency diagram for CMakeCXXCompilerId.cpp</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../da/d72/CMakeCXXCompilerId_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for CMakeCXXCompilerId.cpp</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../df/dcb/CMakeCXXCompilerId_8cpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Macros</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1aba35d0d200deaeb06aee95ca297acb28">ARCHITECTURE_ID</link> &quot;&quot;</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a81dee0709ded976b2e0319239f72d174">COMPILER_ID</link> &quot;&quot;</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1aac8ec3757ff33c1d78caa8ced06904d2">DEC</link> (&apos;0&apos; + (((n) / 10000000)%10)), \
  (&apos;0&apos; + (((n) / 1000000)%10)),  \
  (&apos;0&apos; + (((n) / 100000)%10)),   \
  (&apos;0&apos; + (((n) / 10000)%10)),    \
  (&apos;0&apos; + (((n) / 1000)%10)),     \
  (&apos;0&apos; + (((n) / 100)%10)),      \
  (&apos;0&apos; + (((n) / 10)%10)),       \
  (&apos;0&apos; +  ((n) % 10))</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1ad437e42b7da877bffc18f1965dae5765">HEX</link> (&apos;0&apos; + ((n)&gt;&gt;28 &amp; 0xF)), \
  (&apos;0&apos; + ((n)&gt;&gt;24 &amp; 0xF)), \
  (&apos;0&apos; + ((n)&gt;&gt;20 &amp; 0xF)), \
  (&apos;0&apos; + ((n)&gt;&gt;16 &amp; 0xF)), \
  (&apos;0&apos; + ((n)&gt;&gt;12 &amp; 0xF)), \
  (&apos;0&apos; + ((n)&gt;&gt;8  &amp; 0xF)), \
  (&apos;0&apos; + ((n)&gt;&gt;4  &amp; 0xF)), \
  (&apos;0&apos; + ((n)     &amp; 0xF))</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1adbc5372f40838899018fadbc89bd588b">PLATFORM_ID</link> &quot;&quot;</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Variables</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char const * <link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a59647e99d304ed33b15cb284c27ed391">info_arch</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char const * <link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a4b0efeb7a5d59313986b3a0390f050f6">info_compiler</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>char const * <link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a2321403dee54ee23f0c2fa849c60f7d4">info_platform</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a0ddf1224851353fc92bfbff6f499fa97">main</link> (
int argc, char * argv)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file D:/Longfei/Desktop/catkin_KinovaROS/build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="comment">/*&#32;This&#32;source&#32;file&#32;must&#32;have&#32;a&#32;.cpp&#32;extension&#32;so&#32;that&#32;all&#32;C++&#32;compilers</emphasis>
2 <emphasis class="comment">&#32;&#32;&#32;recognize&#32;the&#32;extension&#32;without&#32;flags.&#32;&#32;Borland&#32;does&#32;not&#32;know&#32;.cxx&#32;for</emphasis>
3 <emphasis class="comment">&#32;&#32;&#32;example.&#32;&#32;*/</emphasis>
4 <emphasis class="preprocessor">#ifndef&#32;__cplusplus</emphasis>
5 <emphasis class="preprocessor">#&#32;error&#32;&quot;A&#32;C&#32;compiler&#32;has&#32;been&#32;selected&#32;for&#32;C++.&quot;</emphasis>
6 <emphasis class="preprocessor">#endif</emphasis>
7 
8 <emphasis class="comment">/*&#32;Version&#32;number&#32;components:&#32;V=Version,&#32;R=Revision,&#32;P=Patch</emphasis>
9 <emphasis class="comment">&#32;&#32;&#32;Version&#32;date&#32;components:&#32;&#32;&#32;YYYY=Year,&#32;MM=Month,&#32;&#32;&#32;DD=Day&#32;&#32;*/</emphasis>
10 
11 <emphasis class="preprocessor">#if&#32;defined(__COMO__)</emphasis>
12 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Comeau&quot;</emphasis>
13 
14 <emphasis class="preprocessor">#elif&#32;defined(__INTEL_COMPILER)&#32;||&#32;defined(__ICC)</emphasis>
15 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Intel&quot;</emphasis>
16 &#32;&#32;<emphasis class="comment">/*&#32;__INTEL_COMPILER&#32;=&#32;VRP&#32;*/</emphasis>
17 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__INTEL_COMPILER/100)</emphasis>
18 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__INTEL_COMPILER/10&#32;%&#32;10)</emphasis>
19 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__INTEL_COMPILER&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
20 <emphasis class="preprocessor">#&#32;if&#32;defined(__INTEL_COMPILER_BUILD_DATE)</emphasis>
21 &#32;&#32;<emphasis class="comment">/*&#32;__INTEL_COMPILER_BUILD_DATE&#32;=&#32;YYYYMMDD&#32;*/</emphasis>
22 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_TWEAK&#32;DEC(__INTEL_COMPILER_BUILD_DATE)</emphasis>
23 <emphasis class="preprocessor">#&#32;endif</emphasis>
24 
25 <emphasis class="preprocessor">#elif&#32;defined(__clang__)</emphasis>
26 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Clang&quot;</emphasis>
27 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__clang_major__)</emphasis>
28 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__clang_minor__)</emphasis>
29 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__clang_patchlevel__)</emphasis>
30 
31 <emphasis class="preprocessor">#elif&#32;defined(__BORLANDC__)&#32;&amp;&amp;&#32;defined(__CODEGEARC_VERSION__)</emphasis>
32 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Embarcadero&quot;</emphasis>
33 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;HEX(__CODEGEARC_VERSION__&gt;&gt;24&#32;&amp;&#32;0x00FF)</emphasis>
34 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;HEX(__CODEGEARC_VERSION__&gt;&gt;16&#32;&amp;&#32;0x00FF)</emphasis>
35 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;HEX(__CODEGEARC_VERSION__&#32;&#32;&#32;&#32;&#32;&amp;&#32;0xFFFF)</emphasis>
36 
37 <emphasis class="preprocessor">#elif&#32;defined(__BORLANDC__)</emphasis>
38 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Borland&quot;</emphasis>
39 &#32;&#32;<emphasis class="comment">/*&#32;__BORLANDC__&#32;=&#32;0xVRR&#32;*/</emphasis>
40 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;HEX(__BORLANDC__&gt;&gt;8)</emphasis>
41 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;HEX(__BORLANDC__&#32;&amp;&#32;0xFF)</emphasis>
42 
43 <emphasis class="preprocessor">#elif&#32;defined(__WATCOMC__)</emphasis>
44 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Watcom&quot;</emphasis>
45 &#32;&#32;<emphasis class="comment">/*&#32;__WATCOMC__&#32;=&#32;VVRR&#32;*/</emphasis>
46 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__WATCOMC__&#32;/&#32;100)</emphasis>
47 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__WATCOMC__&#32;%&#32;100)</emphasis>
48 
49 <emphasis class="preprocessor">#elif&#32;defined(__SUNPRO_CC)</emphasis>
50 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;SunPro&quot;</emphasis>
51 <emphasis class="preprocessor">#&#32;if&#32;__SUNPRO_CC&#32;&gt;=&#32;0x5100</emphasis>
52 &#32;&#32;&#32;<emphasis class="comment">/*&#32;__SUNPRO_CC&#32;=&#32;0xVRRP&#32;*/</emphasis>
53 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;HEX(__SUNPRO_CC&gt;&gt;12)</emphasis>
54 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;HEX(__SUNPRO_CC&gt;&gt;4&#32;&amp;&#32;0xFF)</emphasis>
55 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;HEX(__SUNPRO_CC&#32;&#32;&#32;&#32;&amp;&#32;0xF)</emphasis>
56 <emphasis class="preprocessor">#&#32;else</emphasis>
57 &#32;&#32;&#32;<emphasis class="comment">/*&#32;__SUNPRO_CC&#32;=&#32;0xVRP&#32;*/</emphasis>
58 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;HEX(__SUNPRO_CC&gt;&gt;8)</emphasis>
59 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;HEX(__SUNPRO_CC&gt;&gt;4&#32;&amp;&#32;0xF)</emphasis>
60 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;HEX(__SUNPRO_CC&#32;&#32;&#32;&#32;&amp;&#32;0xF)</emphasis>
61 <emphasis class="preprocessor">#&#32;endif</emphasis>
62 
63 <emphasis class="preprocessor">#elif&#32;defined(__HP_aCC)</emphasis>
64 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;HP&quot;</emphasis>
65 &#32;&#32;<emphasis class="comment">/*&#32;__HP_aCC&#32;=&#32;VVRRPP&#32;*/</emphasis>
66 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__HP_aCC/10000)</emphasis>
67 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__HP_aCC/100&#32;%&#32;100)</emphasis>
68 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__HP_aCC&#32;&#32;&#32;&#32;&#32;%&#32;100)</emphasis>
69 
70 <emphasis class="preprocessor">#elif&#32;defined(__DECCXX)</emphasis>
71 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Compaq&quot;</emphasis>
72 
73 <emphasis class="preprocessor">#elif&#32;defined(__IBMCPP__)</emphasis>
74 <emphasis class="preprocessor">#&#32;if&#32;defined(__COMPILER_VER__)</emphasis>
75 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_ID&#32;&quot;zOS&quot;</emphasis>
76 <emphasis class="preprocessor">#&#32;else</emphasis>
77 <emphasis class="preprocessor">#&#32;&#32;if&#32;__IBMCPP__&#32;&gt;=&#32;800</emphasis>
78 <emphasis class="preprocessor">#&#32;&#32;&#32;define&#32;COMPILER_ID&#32;&quot;XL&quot;</emphasis>
79 <emphasis class="preprocessor">#&#32;&#32;else</emphasis>
80 <emphasis class="preprocessor">#&#32;&#32;&#32;define&#32;COMPILER_ID&#32;&quot;VisualAge&quot;</emphasis>
81 <emphasis class="preprocessor">#&#32;&#32;endif</emphasis>
82 &#32;&#32;&#32;<emphasis class="comment">/*&#32;__IBMCPP__&#32;=&#32;VRP&#32;*/</emphasis>
83 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__IBMCPP__/100)</emphasis>
84 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__IBMCPP__/10&#32;%&#32;10)</emphasis>
85 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__IBMCPP__&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
86 <emphasis class="preprocessor">#&#32;endif</emphasis>
87 
88 <emphasis class="preprocessor">#elif&#32;defined(__PGI)</emphasis>
89 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;PGI&quot;</emphasis>
90 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__PGIC__)</emphasis>
91 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__PGIC_MINOR__)</emphasis>
92 <emphasis class="preprocessor">#&#32;if&#32;defined(__PGIC_PATCHLEVEL__)</emphasis>
93 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__PGIC_PATCHLEVEL__)</emphasis>
94 <emphasis class="preprocessor">#&#32;endif</emphasis>
95 
96 <emphasis class="preprocessor">#elif&#32;defined(__PATHSCALE__)</emphasis>
97 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;PathScale&quot;</emphasis>
98 
99 <emphasis class="preprocessor">#elif&#32;defined(_CRAYC)</emphasis>
100 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Cray&quot;</emphasis>
101 
102 <emphasis class="preprocessor">#elif&#32;defined(__TI_COMPILER_VERSION__)</emphasis>
103 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;TI_DSP&quot;</emphasis>
104 
105 <emphasis class="preprocessor">#elif&#32;defined(__SCO_VERSION__)</emphasis>
106 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;SCO&quot;</emphasis>
107 
108 <emphasis class="preprocessor">#elif&#32;defined(__GNUC__)</emphasis>
109 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;GNU&quot;</emphasis>
110 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__GNUC__)</emphasis>
111 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__GNUC_MINOR__)</emphasis>
112 <emphasis class="preprocessor">#&#32;if&#32;defined(__GNUC_PATCHLEVEL__)</emphasis>
113 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__GNUC_PATCHLEVEL__)</emphasis>
114 <emphasis class="preprocessor">#&#32;endif</emphasis>
115 
116 <emphasis class="preprocessor">#elif&#32;defined(_MSC_VER)</emphasis>
117 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;MSVC&quot;</emphasis>
118 &#32;&#32;<emphasis class="comment">/*&#32;_MSC_VER&#32;=&#32;VVRR&#32;*/</emphasis>
119 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(_MSC_VER&#32;/&#32;100)</emphasis>
120 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(_MSC_VER&#32;%&#32;100)</emphasis>
121 <emphasis class="preprocessor">#&#32;if&#32;defined(_MSC_FULL_VER)</emphasis>
122 <emphasis class="preprocessor">#&#32;&#32;if&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
123 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;_MSC_FULL_VER&#32;=&#32;VVRRPPPPP&#32;*/</emphasis>
124 <emphasis class="preprocessor">#&#32;&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(_MSC_FULL_VER&#32;%&#32;100000)</emphasis>
125 <emphasis class="preprocessor">#&#32;&#32;else</emphasis>
126 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;_MSC_FULL_VER&#32;=&#32;VVRRPPPP&#32;*/</emphasis>
127 <emphasis class="preprocessor">#&#32;&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(_MSC_FULL_VER&#32;%&#32;10000)</emphasis>
128 <emphasis class="preprocessor">#&#32;&#32;endif</emphasis>
129 <emphasis class="preprocessor">#&#32;endif</emphasis>
130 <emphasis class="preprocessor">#&#32;if&#32;defined(_MSC_BUILD)</emphasis>
131 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_TWEAK&#32;DEC(_MSC_BUILD)</emphasis>
132 <emphasis class="preprocessor">#&#32;endif</emphasis>
133 
134 <emphasis class="preprocessor">#elif&#32;defined(__ADSPBLACKFIN__)&#32;||&#32;defined(__ADSPTS__)&#32;||&#32;defined(__ADSP21000__)</emphasis>
135 <emphasis class="comment">/*&#32;Analog&#32;Devices&#32;C++&#32;compiler&#32;for&#32;Blackfin,&#32;TigerSHARC&#32;and</emphasis>
136 <emphasis class="comment">&#32;&#32;&#32;SHARC&#32;(21000)&#32;DSPs&#32;*/</emphasis>
137 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;ADSP&quot;</emphasis>
138 
139 <emphasis class="preprocessor">#elif&#32;defined(_SGI_COMPILER_VERSION)&#32;||&#32;defined(_COMPILER_VERSION)</emphasis>
140 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;MIPSpro&quot;</emphasis>
141 <emphasis class="preprocessor">#&#32;if&#32;defined(_SGI_COMPILER_VERSION)</emphasis>
142 &#32;&#32;<emphasis class="comment">/*&#32;_SGI_COMPILER_VERSION&#32;=&#32;VRP&#32;*/</emphasis>
143 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(_SGI_COMPILER_VERSION/100)</emphasis>
144 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(_SGI_COMPILER_VERSION/10&#32;%&#32;10)</emphasis>
145 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(_SGI_COMPILER_VERSION&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
146 <emphasis class="preprocessor">#&#32;else</emphasis>
147 &#32;&#32;<emphasis class="comment">/*&#32;_COMPILER_VERSION&#32;=&#32;VRP&#32;*/</emphasis>
148 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(_COMPILER_VERSION/100)</emphasis>
149 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(_COMPILER_VERSION/10&#32;%&#32;10)</emphasis>
150 <emphasis class="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(_COMPILER_VERSION&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
151 <emphasis class="preprocessor">#&#32;endif</emphasis>
152 
153 <emphasis class="comment">/*&#32;This&#32;compiler&#32;is&#32;either&#32;not&#32;known&#32;or&#32;is&#32;too&#32;old&#32;to&#32;define&#32;an</emphasis>
154 <emphasis class="comment">&#32;&#32;&#32;identification&#32;macro.&#32;&#32;Try&#32;to&#32;identify&#32;the&#32;platform&#32;and&#32;guess&#32;that</emphasis>
155 <emphasis class="comment">&#32;&#32;&#32;it&#32;is&#32;the&#32;native&#32;compiler.&#32;&#32;*/</emphasis>
156 <emphasis class="preprocessor">#elif&#32;defined(__sgi)</emphasis>
157 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;MIPSpro&quot;</emphasis>
158 
159 <emphasis class="preprocessor">#elif&#32;defined(__hpux)&#32;||&#32;defined(__hpua)</emphasis>
160 <emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;HP&quot;</emphasis>
161 
162 <emphasis class="preprocessor">#else&#32;</emphasis><emphasis class="comment">/*&#32;unknown&#32;compiler&#32;*/</emphasis><emphasis class="preprocessor"></emphasis>
<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a81dee0709ded976b2e0319239f72d174">163 </link><emphasis class="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;&quot;</emphasis>
164 
165 <emphasis class="preprocessor">#endif</emphasis>
166 
167 <emphasis class="comment">/*&#32;Construct&#32;the&#32;string&#32;literal&#32;in&#32;pieces&#32;to&#32;prevent&#32;the&#32;source&#32;from</emphasis>
168 <emphasis class="comment">&#32;&#32;&#32;getting&#32;matched.&#32;&#32;Store&#32;it&#32;in&#32;a&#32;pointer&#32;rather&#32;than&#32;an&#32;array</emphasis>
169 <emphasis class="comment">&#32;&#32;&#32;because&#32;some&#32;compilers&#32;will&#32;just&#32;produce&#32;instructions&#32;to&#32;fill&#32;the</emphasis>
170 <emphasis class="comment">&#32;&#32;&#32;array&#32;rather&#32;than&#32;assigning&#32;a&#32;pointer&#32;to&#32;a&#32;static&#32;array.&#32;&#32;*/</emphasis>
<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a4b0efeb7a5d59313986b3a0390f050f6">171 </link><emphasis class="keywordtype">char</emphasis>&#32;<emphasis class="keyword">const</emphasis>*&#32;<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a4b0efeb7a5d59313986b3a0390f050f6">info_compiler</link>&#32;=&#32;<emphasis class="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis class="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis class="stringliteral">&quot;compiler[&quot;</emphasis>&#32;<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a81dee0709ded976b2e0319239f72d174">COMPILER_ID</link>&#32;<emphasis class="stringliteral">&quot;]&quot;</emphasis>;
172 
173 <emphasis class="comment">/*&#32;Identify&#32;known&#32;platforms&#32;by&#32;name.&#32;&#32;*/</emphasis>
174 <emphasis class="preprocessor">#if&#32;defined(__linux)&#32;||&#32;defined(__linux__)&#32;||&#32;defined(linux)</emphasis>
175 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Linux&quot;</emphasis>
176 
177 <emphasis class="preprocessor">#elif&#32;defined(__CYGWIN__)</emphasis>
178 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Cygwin&quot;</emphasis>
179 
180 <emphasis class="preprocessor">#elif&#32;defined(__MINGW32__)</emphasis>
181 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;MinGW&quot;</emphasis>
182 
183 <emphasis class="preprocessor">#elif&#32;defined(__APPLE__)</emphasis>
184 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Darwin&quot;</emphasis>
185 
186 <emphasis class="preprocessor">#elif&#32;defined(_WIN32)&#32;||&#32;defined(__WIN32__)&#32;||&#32;defined(WIN32)</emphasis>
187 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Windows&quot;</emphasis>
188 
189 <emphasis class="preprocessor">#elif&#32;defined(__FreeBSD__)&#32;||&#32;defined(__FreeBSD)</emphasis>
190 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;FreeBSD&quot;</emphasis>
191 
192 <emphasis class="preprocessor">#elif&#32;defined(__NetBSD__)&#32;||&#32;defined(__NetBSD)</emphasis>
193 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;NetBSD&quot;</emphasis>
194 
195 <emphasis class="preprocessor">#elif&#32;defined(__OpenBSD__)&#32;||&#32;defined(__OPENBSD)</emphasis>
196 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;OpenBSD&quot;</emphasis>
197 
198 <emphasis class="preprocessor">#elif&#32;defined(__sun)&#32;||&#32;defined(sun)</emphasis>
199 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;SunOS&quot;</emphasis>
200 
201 <emphasis class="preprocessor">#elif&#32;defined(_AIX)&#32;||&#32;defined(__AIX)&#32;||&#32;defined(__AIX__)&#32;||&#32;defined(__aix)&#32;||&#32;defined(__aix__)</emphasis>
202 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;AIX&quot;</emphasis>
203 
204 <emphasis class="preprocessor">#elif&#32;defined(__sgi)&#32;||&#32;defined(__sgi__)&#32;||&#32;defined(_SGI)</emphasis>
205 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;IRIX&quot;</emphasis>
206 
207 <emphasis class="preprocessor">#elif&#32;defined(__hpux)&#32;||&#32;defined(__hpux__)</emphasis>
208 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;HP-UX&quot;</emphasis>
209 
210 <emphasis class="preprocessor">#elif&#32;defined(__HAIKU)&#32;||&#32;defined(__HAIKU__)&#32;||&#32;defined(_HAIKU)</emphasis>
211 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Haiku&quot;</emphasis>
212 <emphasis class="comment">/*&#32;Haiku&#32;also&#32;defines&#32;__BEOS__&#32;so&#32;we&#32;must&#32;</emphasis>
213 <emphasis class="comment">&#32;&#32;&#32;put&#32;it&#32;prior&#32;to&#32;the&#32;check&#32;for&#32;__BEOS__</emphasis>
214 <emphasis class="comment">*/</emphasis>
215 
216 <emphasis class="preprocessor">#elif&#32;defined(__BeOS)&#32;||&#32;defined(__BEOS__)&#32;||&#32;defined(_BEOS)</emphasis>
217 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;BeOS&quot;</emphasis>
218 
219 <emphasis class="preprocessor">#elif&#32;defined(__QNX__)&#32;||&#32;defined(__QNXNTO__)</emphasis>
220 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;QNX&quot;</emphasis>
221 
222 <emphasis class="preprocessor">#elif&#32;defined(__tru64)&#32;||&#32;defined(_tru64)&#32;||&#32;defined(__TRU64__)</emphasis>
223 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Tru64&quot;</emphasis>
224 
225 <emphasis class="preprocessor">#elif&#32;defined(__riscos)&#32;||&#32;defined(__riscos__)</emphasis>
226 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;RISCos&quot;</emphasis>
227 
228 <emphasis class="preprocessor">#elif&#32;defined(__sinix)&#32;||&#32;defined(__sinix__)&#32;||&#32;defined(__SINIX__)</emphasis>
229 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;SINIX&quot;</emphasis>
230 
231 <emphasis class="preprocessor">#elif&#32;defined(__UNIX_SV__)</emphasis>
232 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;UNIX_SV&quot;</emphasis>
233 
234 <emphasis class="preprocessor">#elif&#32;defined(__bsdos__)</emphasis>
235 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;BSDOS&quot;</emphasis>
236 
237 <emphasis class="preprocessor">#elif&#32;defined(_MPRAS)&#32;||&#32;defined(MPRAS)</emphasis>
238 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;MP-RAS&quot;</emphasis>
239 
240 <emphasis class="preprocessor">#elif&#32;defined(__osf)&#32;||&#32;defined(__osf__)</emphasis>
241 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;OSF1&quot;</emphasis>
242 
243 <emphasis class="preprocessor">#elif&#32;defined(_SCO_SV)&#32;||&#32;defined(SCO_SV)&#32;||&#32;defined(sco_sv)</emphasis>
244 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;SCO_SV&quot;</emphasis>
245 
246 <emphasis class="preprocessor">#elif&#32;defined(__ultrix)&#32;||&#32;defined(__ultrix__)&#32;||&#32;defined(_ULTRIX)</emphasis>
247 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;ULTRIX&quot;</emphasis>
248 
249 <emphasis class="preprocessor">#elif&#32;defined(__XENIX__)&#32;||&#32;defined(_XENIX)&#32;||&#32;defined(XENIX)</emphasis>
250 <emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Xenix&quot;</emphasis>
251 
252 <emphasis class="preprocessor">#else&#32;</emphasis><emphasis class="comment">/*&#32;unknown&#32;platform&#32;*/</emphasis><emphasis class="preprocessor"></emphasis>
<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1adbc5372f40838899018fadbc89bd588b">253 </link><emphasis class="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;&quot;</emphasis>
254 
255 <emphasis class="preprocessor">#endif</emphasis>
256 
257 <emphasis class="comment">/*&#32;For&#32;windows&#32;compilers&#32;MSVC&#32;and&#32;Intel&#32;we&#32;can&#32;determine</emphasis>
258 <emphasis class="comment">&#32;&#32;&#32;the&#32;architecture&#32;of&#32;the&#32;compiler&#32;being&#32;used.&#32;&#32;This&#32;is&#32;because</emphasis>
259 <emphasis class="comment">&#32;&#32;&#32;the&#32;compilers&#32;do&#32;not&#32;have&#32;flags&#32;that&#32;can&#32;change&#32;the&#32;architecture,</emphasis>
260 <emphasis class="comment">&#32;&#32;&#32;but&#32;rather&#32;depend&#32;on&#32;which&#32;compiler&#32;is&#32;being&#32;used</emphasis>
261 <emphasis class="comment">*/</emphasis>
262 <emphasis class="preprocessor">#if&#32;defined(_WIN32)&#32;&amp;&amp;&#32;defined(_MSC_VER)</emphasis>
263 <emphasis class="preprocessor">#&#32;if&#32;defined(_M_IA64)</emphasis>
264 <emphasis class="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;IA64&quot;</emphasis>
265 
266 <emphasis class="preprocessor">#&#32;elif&#32;defined(_M_X64)&#32;||&#32;defined(_M_AMD64)</emphasis>
267 <emphasis class="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;x64&quot;&#32;</emphasis>
268 
269 <emphasis class="preprocessor">#&#32;elif&#32;defined(_M_IX86)</emphasis>
270 <emphasis class="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;X86&quot;</emphasis>
271 
272 <emphasis class="preprocessor">#&#32;elif&#32;defined(_M_ARM)</emphasis>
273 <emphasis class="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;ARM&quot;</emphasis>
274 
275 <emphasis class="preprocessor">#&#32;else&#32;</emphasis><emphasis class="comment">/*&#32;unknown&#32;architecture&#32;*/</emphasis><emphasis class="preprocessor"></emphasis>
276 <emphasis class="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;&quot;</emphasis>
277 <emphasis class="preprocessor">#&#32;endif</emphasis>
278 
279 <emphasis class="preprocessor">#else</emphasis>
<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1aba35d0d200deaeb06aee95ca297acb28">280 </link><emphasis class="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;&quot;</emphasis>
281 <emphasis class="preprocessor">#endif</emphasis>
282 
283 <emphasis class="comment">/*&#32;Convert&#32;integer&#32;to&#32;decimal&#32;digit&#32;literals.&#32;&#32;*/</emphasis>
<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1aac8ec3757ff33c1d78caa8ced06904d2">284 </link><emphasis class="preprocessor">#define&#32;DEC(n)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
285 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;10000000)%10)),&#32;\</emphasis>
286 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;1000000)%10)),&#32;&#32;\</emphasis>
287 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;100000)%10)),&#32;&#32;&#32;\</emphasis>
288 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;10000)%10)),&#32;&#32;&#32;&#32;\</emphasis>
289 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;1000)%10)),&#32;&#32;&#32;&#32;&#32;\</emphasis>
290 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;100)%10)),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
291 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;10)%10)),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
292 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;&#32;((n)&#32;%&#32;10))</emphasis>
293 
294 <emphasis class="comment">/*&#32;Convert&#32;integer&#32;to&#32;hex&#32;digit&#32;literals.&#32;&#32;*/</emphasis>
<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1ad437e42b7da877bffc18f1965dae5765">295 </link><emphasis class="preprocessor">#define&#32;HEX(n)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
296 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;28&#32;&amp;&#32;0xF)),&#32;\</emphasis>
297 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;24&#32;&amp;&#32;0xF)),&#32;\</emphasis>
298 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;20&#32;&amp;&#32;0xF)),&#32;\</emphasis>
299 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;16&#32;&amp;&#32;0xF)),&#32;\</emphasis>
300 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;12&#32;&amp;&#32;0xF)),&#32;\</emphasis>
301 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;8&#32;&#32;&amp;&#32;0xF)),&#32;\</emphasis>
302 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;4&#32;&#32;&amp;&#32;0xF)),&#32;\</emphasis>
303 <emphasis class="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&#32;&#32;&#32;&#32;&#32;&amp;&#32;0xF))</emphasis>
304 
305 <emphasis class="comment">/*&#32;Construct&#32;a&#32;string&#32;literal&#32;encoding&#32;the&#32;version&#32;number&#32;components.&#32;*/</emphasis>
306 <emphasis class="preprocessor">#ifdef&#32;COMPILER_VERSION_MAJOR</emphasis>
307 <emphasis class="keywordtype">char</emphasis>&#32;<emphasis class="keyword">const</emphasis>&#32;info_version[]&#32;=&#32;{
308 &#32;&#32;<emphasis class="charliteral">&apos;I&apos;</emphasis>,&#32;<emphasis class="charliteral">&apos;N&apos;</emphasis>,&#32;<emphasis class="charliteral">&apos;F&apos;</emphasis>,&#32;<emphasis class="charliteral">&apos;O&apos;</emphasis>,&#32;<emphasis class="charliteral">&apos;:&apos;</emphasis>,
309 &#32;&#32;<emphasis class="charliteral">&apos;c&apos;</emphasis>,<emphasis class="charliteral">&apos;o&apos;</emphasis>,<emphasis class="charliteral">&apos;m&apos;</emphasis>,<emphasis class="charliteral">&apos;p&apos;</emphasis>,<emphasis class="charliteral">&apos;i&apos;</emphasis>,<emphasis class="charliteral">&apos;l&apos;</emphasis>,<emphasis class="charliteral">&apos;e&apos;</emphasis>,<emphasis class="charliteral">&apos;r&apos;</emphasis>,<emphasis class="charliteral">&apos;_&apos;</emphasis>,<emphasis class="charliteral">&apos;v&apos;</emphasis>,<emphasis class="charliteral">&apos;e&apos;</emphasis>,<emphasis class="charliteral">&apos;r&apos;</emphasis>,<emphasis class="charliteral">&apos;s&apos;</emphasis>,<emphasis class="charliteral">&apos;i&apos;</emphasis>,<emphasis class="charliteral">&apos;o&apos;</emphasis>,<emphasis class="charliteral">&apos;n&apos;</emphasis>,<emphasis class="charliteral">&apos;[&apos;</emphasis>,
310 &#32;&#32;COMPILER_VERSION_MAJOR,
311 <emphasis class="preprocessor">#&#32;ifdef&#32;COMPILER_VERSION_MINOR</emphasis>
312 &#32;&#32;<emphasis class="charliteral">&apos;.&apos;</emphasis>,&#32;COMPILER_VERSION_MINOR,
313 <emphasis class="preprocessor">#&#32;&#32;ifdef&#32;COMPILER_VERSION_PATCH</emphasis>
314 &#32;&#32;&#32;<emphasis class="charliteral">&apos;.&apos;</emphasis>,&#32;COMPILER_VERSION_PATCH,
315 <emphasis class="preprocessor">#&#32;&#32;&#32;ifdef&#32;COMPILER_VERSION_TWEAK</emphasis>
316 &#32;&#32;&#32;&#32;<emphasis class="charliteral">&apos;.&apos;</emphasis>,&#32;COMPILER_VERSION_TWEAK,
317 <emphasis class="preprocessor">#&#32;&#32;&#32;endif</emphasis>
318 <emphasis class="preprocessor">#&#32;&#32;endif</emphasis>
319 <emphasis class="preprocessor">#&#32;endif</emphasis>
320 &#32;&#32;<emphasis class="charliteral">&apos;]&apos;</emphasis>,<emphasis class="charliteral">&apos;\0&apos;</emphasis>};
321 <emphasis class="preprocessor">#endif</emphasis>
322 
323 <emphasis class="comment">/*&#32;Construct&#32;the&#32;string&#32;literal&#32;in&#32;pieces&#32;to&#32;prevent&#32;the&#32;source&#32;from</emphasis>
324 <emphasis class="comment">&#32;&#32;&#32;getting&#32;matched.&#32;&#32;Store&#32;it&#32;in&#32;a&#32;pointer&#32;rather&#32;than&#32;an&#32;array</emphasis>
325 <emphasis class="comment">&#32;&#32;&#32;because&#32;some&#32;compilers&#32;will&#32;just&#32;produce&#32;instructions&#32;to&#32;fill&#32;the</emphasis>
326 <emphasis class="comment">&#32;&#32;&#32;array&#32;rather&#32;than&#32;assigning&#32;a&#32;pointer&#32;to&#32;a&#32;static&#32;array.&#32;&#32;*/</emphasis>
<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a2321403dee54ee23f0c2fa849c60f7d4">327 </link><emphasis class="keywordtype">char</emphasis>&#32;<emphasis class="keyword">const</emphasis>*&#32;<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a2321403dee54ee23f0c2fa849c60f7d4">info_platform</link>&#32;=&#32;<emphasis class="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis class="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis class="stringliteral">&quot;platform[&quot;</emphasis>&#32;<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1adbc5372f40838899018fadbc89bd588b">PLATFORM_ID</link>&#32;<emphasis class="stringliteral">&quot;]&quot;</emphasis>;
<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a59647e99d304ed33b15cb284c27ed391">328 </link><emphasis class="keywordtype">char</emphasis>&#32;<emphasis class="keyword">const</emphasis>*&#32;<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a59647e99d304ed33b15cb284c27ed391">info_arch</link>&#32;=&#32;<emphasis class="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis class="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis class="stringliteral">&quot;arch[&quot;</emphasis>&#32;<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1aba35d0d200deaeb06aee95ca297acb28">ARCHITECTURE_ID</link>&#32;<emphasis class="stringliteral">&quot;]&quot;</emphasis>;
329 
330 
331 
332 <emphasis class="comment">/*--------------------------------------------------------------------------*/</emphasis>
333 
<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a0ddf1224851353fc92bfbff6f499fa97">334 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a0ddf1224851353fc92bfbff6f499fa97">main</link>(<emphasis class="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis class="keywordtype">char</emphasis>*&#32;argv[])
335 {
336 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;require&#32;=&#32;0;
337 &#32;&#32;require&#32;+=&#32;<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a4b0efeb7a5d59313986b3a0390f050f6">info_compiler</link>[argc];
338 &#32;&#32;require&#32;+=&#32;<link linkend="d6/d83/CMakeCXXCompilerId_8cpp_1a2321403dee54ee23f0c2fa849c60f7d4">info_platform</link>[argc];
339 <emphasis class="preprocessor">#ifdef&#32;COMPILER_VERSION_MAJOR</emphasis>
340 &#32;&#32;require&#32;+=&#32;info_version[argc];
341 <emphasis class="preprocessor">#endif</emphasis>
342 &#32;&#32;(void)argv;
343 &#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;require;
344 }
    </computeroutput></literallayout>
</section>
