<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="dc/dc8/__ArmPoseAction_8py">
    <title>_ArmPoseAction.py File Reference</title>
<para>Include dependency diagram for _ArmPoseAction.py</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../dc/d77/__ArmPoseAction_8py__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for _ArmPoseAction.py</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../db/ddd/__ArmPoseAction_8py__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction">jaco_msgs::msg::_ArmPoseAction::ArmPoseAction</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <simplesect>
            <title> Namespaces </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d4/dfb/namespacejaco__msgs_1_1msg_1_1__ArmPoseAction">jaco_msgs::msg::_ArmPoseAction</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file D:/Longfei/Desktop/catkin_KinovaROS/devel/lib/python2.7/dist-packages/jaco_msgs/msg/_ArmPoseAction.py</para>
    </simplesect>
    <literallayout><computeroutput>
<link linkend="d4/dfb/namespacejaco__msgs_1_1msg_1_1__ArmPoseAction">1 </link><emphasis class="stringliteral">&quot;&quot;&quot;autogenerated&#32;by&#32;genpy&#32;from&#32;jaco_msgs/ArmPoseAction.msg.&#32;Do&#32;not&#32;edit.&quot;&quot;&quot;</emphasis>
2 <emphasis class="keyword">import</emphasis>&#32;sys
<link linkend="d4/dfb/namespacejaco__msgs_1_1msg_1_1__ArmPoseAction_1ad4725f5a042ab6c2532efc8548b24535">3 </link>python3&#32;=&#32;<emphasis class="keyword">True</emphasis>&#32;<emphasis class="keywordflow">if</emphasis>&#32;sys.hexversion&#32;&gt;&#32;0x03000000&#32;<emphasis class="keywordflow">else</emphasis>&#32;<emphasis class="keyword">False</emphasis>
4 <emphasis class="keyword">import</emphasis>&#32;genpy
5 <emphasis class="keyword">import</emphasis>&#32;struct
6 
7 <emphasis class="keyword">import</emphasis>&#32;<link linkend="d2/dbe/namespacejaco__msgs_1_1msg">jaco_msgs.msg</link>
8 <emphasis class="keyword">import</emphasis>&#32;geometry_msgs.msg
9 <emphasis class="keyword">import</emphasis>&#32;genpy
10 <emphasis class="keyword">import</emphasis>&#32;actionlib_msgs.msg
11 <emphasis class="keyword">import</emphasis>&#32;std_msgs.msg
12 
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction">13 </link><emphasis class="keyword">class&#32;</emphasis><link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction">ArmPoseAction</link>(genpy.Message):
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a8940e31e74f95f0132f4956a4d563b0d">14 </link>&#32;&#32;_md5sum&#32;=&#32;<emphasis class="stringliteral">&quot;31667e565fbf24e6a0900ee01cdf7272&quot;</emphasis>
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1aeb56bfbee3623960b16d34cf07c743ea">15 </link>&#32;&#32;_type&#32;=&#32;<emphasis class="stringliteral">&quot;jaco_msgs/ArmPoseAction&quot;</emphasis>
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a55f6889a5be10bdf4116282783bdaf60">16 </link>&#32;&#32;_has_header&#32;=&#32;<emphasis class="keyword">False</emphasis>&#32;<emphasis class="comment">#flag&#32;to&#32;mark&#32;the&#32;presence&#32;of&#32;a&#32;Header&#32;object</emphasis>
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1acb83d126dba77cf76e1612efa04754b5">17 </link>&#32;&#32;_full_text&#32;=&#32;<emphasis class="stringliteral">&quot;&quot;&quot;#&#32;======&#32;DO&#32;NOT&#32;MODIFY!&#32;AUTOGENERATED&#32;FROM&#32;AN&#32;ACTION&#32;DEFINITION&#32;======</emphasis>
18 <emphasis class="stringliteral"></emphasis>
19 <emphasis class="stringliteral">ArmPoseActionGoal&#32;action_goal</emphasis>
20 <emphasis class="stringliteral">ArmPoseActionResult&#32;action_result</emphasis>
21 <emphasis class="stringliteral">ArmPoseActionFeedback&#32;action_feedback</emphasis>
22 <emphasis class="stringliteral"></emphasis>
23 <emphasis class="stringliteral">================================================================================</emphasis>
24 <emphasis class="stringliteral">MSG:&#32;jaco_msgs/ArmPoseActionGoal</emphasis>
25 <emphasis class="stringliteral">#&#32;======&#32;DO&#32;NOT&#32;MODIFY!&#32;AUTOGENERATED&#32;FROM&#32;AN&#32;ACTION&#32;DEFINITION&#32;======</emphasis>
26 <emphasis class="stringliteral"></emphasis>
27 <emphasis class="stringliteral">Header&#32;header</emphasis>
28 <emphasis class="stringliteral">actionlib_msgs/GoalID&#32;goal_id</emphasis>
29 <emphasis class="stringliteral">ArmPoseGoal&#32;goal</emphasis>
30 <emphasis class="stringliteral"></emphasis>
31 <emphasis class="stringliteral">================================================================================</emphasis>
32 <emphasis class="stringliteral">MSG:&#32;std_msgs/Header</emphasis>
33 <emphasis class="stringliteral">#&#32;Standard&#32;metadata&#32;for&#32;higher-level&#32;stamped&#32;data&#32;types.</emphasis>
34 <emphasis class="stringliteral">#&#32;This&#32;is&#32;generally&#32;used&#32;to&#32;communicate&#32;timestamped&#32;data&#32;</emphasis>
35 <emphasis class="stringliteral">#&#32;in&#32;a&#32;particular&#32;coordinate&#32;frame.</emphasis>
36 <emphasis class="stringliteral">#&#32;</emphasis>
37 <emphasis class="stringliteral">#&#32;sequence&#32;ID:&#32;consecutively&#32;increasing&#32;ID&#32;</emphasis>
38 <emphasis class="stringliteral">uint32&#32;seq</emphasis>
39 <emphasis class="stringliteral">#Two-integer&#32;timestamp&#32;that&#32;is&#32;expressed&#32;as:</emphasis>
40 <emphasis class="stringliteral">#&#32;*&#32;stamp.secs:&#32;seconds&#32;(stamp_secs)&#32;since&#32;epoch</emphasis>
41 <emphasis class="stringliteral">#&#32;*&#32;stamp.nsecs:&#32;nanoseconds&#32;since&#32;stamp_secs</emphasis>
42 <emphasis class="stringliteral">#&#32;time-handling&#32;sugar&#32;is&#32;provided&#32;by&#32;the&#32;client&#32;library</emphasis>
43 <emphasis class="stringliteral">time&#32;stamp</emphasis>
44 <emphasis class="stringliteral">#Frame&#32;this&#32;data&#32;is&#32;associated&#32;with</emphasis>
45 <emphasis class="stringliteral">#&#32;0:&#32;no&#32;frame</emphasis>
46 <emphasis class="stringliteral">#&#32;1:&#32;global&#32;frame</emphasis>
47 <emphasis class="stringliteral">string&#32;frame_id</emphasis>
48 <emphasis class="stringliteral"></emphasis>
49 <emphasis class="stringliteral">================================================================================</emphasis>
50 <emphasis class="stringliteral">MSG:&#32;actionlib_msgs/GoalID</emphasis>
51 <emphasis class="stringliteral">#&#32;The&#32;stamp&#32;should&#32;store&#32;the&#32;time&#32;at&#32;which&#32;this&#32;goal&#32;was&#32;requested.</emphasis>
52 <emphasis class="stringliteral">#&#32;It&#32;is&#32;used&#32;by&#32;an&#32;action&#32;server&#32;when&#32;it&#32;tries&#32;to&#32;preempt&#32;all</emphasis>
53 <emphasis class="stringliteral">#&#32;goals&#32;that&#32;were&#32;requested&#32;before&#32;a&#32;certain&#32;time</emphasis>
54 <emphasis class="stringliteral">time&#32;stamp</emphasis>
55 <emphasis class="stringliteral"></emphasis>
56 <emphasis class="stringliteral">#&#32;The&#32;id&#32;provides&#32;a&#32;way&#32;to&#32;associate&#32;feedback&#32;and</emphasis>
57 <emphasis class="stringliteral">#&#32;result&#32;message&#32;with&#32;specific&#32;goal&#32;requests.&#32;The&#32;id</emphasis>
58 <emphasis class="stringliteral">#&#32;specified&#32;must&#32;be&#32;unique.</emphasis>
59 <emphasis class="stringliteral">string&#32;id</emphasis>
60 <emphasis class="stringliteral"></emphasis>
61 <emphasis class="stringliteral"></emphasis>
62 <emphasis class="stringliteral">================================================================================</emphasis>
63 <emphasis class="stringliteral">MSG:&#32;jaco_msgs/ArmPoseGoal</emphasis>
64 <emphasis class="stringliteral">#&#32;======&#32;DO&#32;NOT&#32;MODIFY!&#32;AUTOGENERATED&#32;FROM&#32;AN&#32;ACTION&#32;DEFINITION&#32;======</emphasis>
65 <emphasis class="stringliteral">#&#32;Goal</emphasis>
66 <emphasis class="stringliteral">geometry_msgs/PoseStamped&#32;pose</emphasis>
67 <emphasis class="stringliteral"></emphasis>
68 <emphasis class="stringliteral">================================================================================</emphasis>
69 <emphasis class="stringliteral">MSG:&#32;geometry_msgs/PoseStamped</emphasis>
70 <emphasis class="stringliteral">#&#32;A&#32;Pose&#32;with&#32;reference&#32;coordinate&#32;frame&#32;and&#32;timestamp</emphasis>
71 <emphasis class="stringliteral">Header&#32;header</emphasis>
72 <emphasis class="stringliteral">Pose&#32;pose</emphasis>
73 <emphasis class="stringliteral"></emphasis>
74 <emphasis class="stringliteral">================================================================================</emphasis>
75 <emphasis class="stringliteral">MSG:&#32;geometry_msgs/Pose</emphasis>
76 <emphasis class="stringliteral">#&#32;A&#32;representation&#32;of&#32;pose&#32;in&#32;free&#32;space,&#32;composed&#32;of&#32;postion&#32;and&#32;orientation.&#32;</emphasis>
77 <emphasis class="stringliteral">Point&#32;position</emphasis>
78 <emphasis class="stringliteral">Quaternion&#32;orientation</emphasis>
79 <emphasis class="stringliteral"></emphasis>
80 <emphasis class="stringliteral">================================================================================</emphasis>
81 <emphasis class="stringliteral">MSG:&#32;geometry_msgs/Point</emphasis>
82 <emphasis class="stringliteral">#&#32;This&#32;contains&#32;the&#32;position&#32;of&#32;a&#32;point&#32;in&#32;free&#32;space</emphasis>
83 <emphasis class="stringliteral">float64&#32;x</emphasis>
84 <emphasis class="stringliteral">float64&#32;y</emphasis>
85 <emphasis class="stringliteral">float64&#32;z</emphasis>
86 <emphasis class="stringliteral"></emphasis>
87 <emphasis class="stringliteral">================================================================================</emphasis>
88 <emphasis class="stringliteral">MSG:&#32;geometry_msgs/Quaternion</emphasis>
89 <emphasis class="stringliteral">#&#32;This&#32;represents&#32;an&#32;orientation&#32;in&#32;free&#32;space&#32;in&#32;quaternion&#32;form.</emphasis>
90 <emphasis class="stringliteral"></emphasis>
91 <emphasis class="stringliteral">float64&#32;x</emphasis>
92 <emphasis class="stringliteral">float64&#32;y</emphasis>
93 <emphasis class="stringliteral">float64&#32;z</emphasis>
94 <emphasis class="stringliteral">float64&#32;w</emphasis>
95 <emphasis class="stringliteral"></emphasis>
96 <emphasis class="stringliteral">================================================================================</emphasis>
97 <emphasis class="stringliteral">MSG:&#32;jaco_msgs/ArmPoseActionResult</emphasis>
98 <emphasis class="stringliteral">#&#32;======&#32;DO&#32;NOT&#32;MODIFY!&#32;AUTOGENERATED&#32;FROM&#32;AN&#32;ACTION&#32;DEFINITION&#32;======</emphasis>
99 <emphasis class="stringliteral"></emphasis>
100 <emphasis class="stringliteral">Header&#32;header</emphasis>
101 <emphasis class="stringliteral">actionlib_msgs/GoalStatus&#32;status</emphasis>
102 <emphasis class="stringliteral">ArmPoseResult&#32;result</emphasis>
103 <emphasis class="stringliteral"></emphasis>
104 <emphasis class="stringliteral">================================================================================</emphasis>
105 <emphasis class="stringliteral">MSG:&#32;actionlib_msgs/GoalStatus</emphasis>
106 <emphasis class="stringliteral">GoalID&#32;goal_id</emphasis>
107 <emphasis class="stringliteral">uint8&#32;status</emphasis>
108 <emphasis class="stringliteral">uint8&#32;PENDING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0&#32;&#32;&#32;#&#32;The&#32;goal&#32;has&#32;yet&#32;to&#32;be&#32;processed&#32;by&#32;the&#32;action&#32;server</emphasis>
109 <emphasis class="stringliteral">uint8&#32;ACTIVE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;1&#32;&#32;&#32;#&#32;The&#32;goal&#32;is&#32;currently&#32;being&#32;processed&#32;by&#32;the&#32;action&#32;server</emphasis>
110 <emphasis class="stringliteral">uint8&#32;PREEMPTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;2&#32;&#32;&#32;#&#32;The&#32;goal&#32;received&#32;a&#32;cancel&#32;request&#32;after&#32;it&#32;started&#32;executing</emphasis>
111 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#&#32;&#32;&#32;and&#32;has&#32;since&#32;completed&#32;its&#32;execution&#32;(Terminal&#32;State)</emphasis>
112 <emphasis class="stringliteral">uint8&#32;SUCCEEDED&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;3&#32;&#32;&#32;#&#32;The&#32;goal&#32;was&#32;achieved&#32;successfully&#32;by&#32;the&#32;action&#32;server&#32;(Terminal&#32;State)</emphasis>
113 <emphasis class="stringliteral">uint8&#32;ABORTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;4&#32;&#32;&#32;#&#32;The&#32;goal&#32;was&#32;aborted&#32;during&#32;execution&#32;by&#32;the&#32;action&#32;server&#32;due</emphasis>
114 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#&#32;&#32;&#32;&#32;to&#32;some&#32;failure&#32;(Terminal&#32;State)</emphasis>
115 <emphasis class="stringliteral">uint8&#32;REJECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;5&#32;&#32;&#32;#&#32;The&#32;goal&#32;was&#32;rejected&#32;by&#32;the&#32;action&#32;server&#32;without&#32;being&#32;processed,</emphasis>
116 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#&#32;&#32;&#32;&#32;because&#32;the&#32;goal&#32;was&#32;unattainable&#32;or&#32;invalid&#32;(Terminal&#32;State)</emphasis>
117 <emphasis class="stringliteral">uint8&#32;PREEMPTING&#32;&#32;&#32;&#32;&#32;&#32;=&#32;6&#32;&#32;&#32;#&#32;The&#32;goal&#32;received&#32;a&#32;cancel&#32;request&#32;after&#32;it&#32;started&#32;executing</emphasis>
118 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#&#32;&#32;&#32;&#32;and&#32;has&#32;not&#32;yet&#32;completed&#32;execution</emphasis>
119 <emphasis class="stringliteral">uint8&#32;RECALLING&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;7&#32;&#32;&#32;#&#32;The&#32;goal&#32;received&#32;a&#32;cancel&#32;request&#32;before&#32;it&#32;started&#32;executing,</emphasis>
120 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#&#32;&#32;&#32;&#32;but&#32;the&#32;action&#32;server&#32;has&#32;not&#32;yet&#32;confirmed&#32;that&#32;the&#32;goal&#32;is&#32;canceled</emphasis>
121 <emphasis class="stringliteral">uint8&#32;RECALLED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;8&#32;&#32;&#32;#&#32;The&#32;goal&#32;received&#32;a&#32;cancel&#32;request&#32;before&#32;it&#32;started&#32;executing</emphasis>
122 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#&#32;&#32;&#32;&#32;and&#32;was&#32;successfully&#32;cancelled&#32;(Terminal&#32;State)</emphasis>
123 <emphasis class="stringliteral">uint8&#32;LOST&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;9&#32;&#32;&#32;#&#32;An&#32;action&#32;client&#32;can&#32;determine&#32;that&#32;a&#32;goal&#32;is&#32;LOST.&#32;This&#32;should&#32;not&#32;be</emphasis>
124 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#&#32;&#32;&#32;&#32;sent&#32;over&#32;the&#32;wire&#32;by&#32;an&#32;action&#32;server</emphasis>
125 <emphasis class="stringliteral"></emphasis>
126 <emphasis class="stringliteral">#Allow&#32;for&#32;the&#32;user&#32;to&#32;associate&#32;a&#32;string&#32;with&#32;GoalStatus&#32;for&#32;debugging</emphasis>
127 <emphasis class="stringliteral">string&#32;text</emphasis>
128 <emphasis class="stringliteral"></emphasis>
129 <emphasis class="stringliteral"></emphasis>
130 <emphasis class="stringliteral">================================================================================</emphasis>
131 <emphasis class="stringliteral">MSG:&#32;jaco_msgs/ArmPoseResult</emphasis>
132 <emphasis class="stringliteral">#&#32;======&#32;DO&#32;NOT&#32;MODIFY!&#32;AUTOGENERATED&#32;FROM&#32;AN&#32;ACTION&#32;DEFINITION&#32;======</emphasis>
133 <emphasis class="stringliteral">#&#32;Result</emphasis>
134 <emphasis class="stringliteral">geometry_msgs/PoseStamped&#32;pose</emphasis>
135 <emphasis class="stringliteral"></emphasis>
136 <emphasis class="stringliteral">================================================================================</emphasis>
137 <emphasis class="stringliteral">MSG:&#32;jaco_msgs/ArmPoseActionFeedback</emphasis>
138 <emphasis class="stringliteral">#&#32;======&#32;DO&#32;NOT&#32;MODIFY!&#32;AUTOGENERATED&#32;FROM&#32;AN&#32;ACTION&#32;DEFINITION&#32;======</emphasis>
139 <emphasis class="stringliteral"></emphasis>
140 <emphasis class="stringliteral">Header&#32;header</emphasis>
141 <emphasis class="stringliteral">actionlib_msgs/GoalStatus&#32;status</emphasis>
142 <emphasis class="stringliteral">ArmPoseFeedback&#32;feedback</emphasis>
143 <emphasis class="stringliteral"></emphasis>
144 <emphasis class="stringliteral">================================================================================</emphasis>
145 <emphasis class="stringliteral">MSG:&#32;jaco_msgs/ArmPoseFeedback</emphasis>
146 <emphasis class="stringliteral">#&#32;======&#32;DO&#32;NOT&#32;MODIFY!&#32;AUTOGENERATED&#32;FROM&#32;AN&#32;ACTION&#32;DEFINITION&#32;======</emphasis>
147 <emphasis class="stringliteral">#&#32;Feedback&#32;message</emphasis>
148 <emphasis class="stringliteral">geometry_msgs/PoseStamped&#32;pose</emphasis>
149 <emphasis class="stringliteral"></emphasis>
150 <emphasis class="stringliteral"></emphasis>
151 <emphasis class="stringliteral">&quot;&quot;&quot;</emphasis>
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a39a608192fd350c87948d9a54454e358">152 </link>&#32;&#32;__slots__&#32;=&#32;[<emphasis class="stringliteral">&apos;action_goal&apos;</emphasis>,<emphasis class="stringliteral">&apos;action_result&apos;</emphasis>,<emphasis class="stringliteral">&apos;action_feedback&apos;</emphasis>]
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1afa6ebc65498cb429b5abf5561c7889b5">153 </link>&#32;&#32;_slot_types&#32;=&#32;[<emphasis class="stringliteral">&apos;jaco_msgs/ArmPoseActionGoal&apos;</emphasis>,<emphasis class="stringliteral">&apos;jaco_msgs/ArmPoseActionResult&apos;</emphasis>,<emphasis class="stringliteral">&apos;jaco_msgs/ArmPoseActionFeedback&apos;</emphasis>]
154 
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a6deb87aa69978cf47e5a8e8a0887a8fa">155 </link>&#32;&#32;<emphasis class="keyword">def&#32;</emphasis><link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a6deb87aa69978cf47e5a8e8a0887a8fa">__init__</link>(self,&#32;*args,&#32;**kwds):
156 &#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;&quot;&quot;</emphasis>
157 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;Constructor.&#32;Any&#32;message&#32;fields&#32;that&#32;are&#32;implicitly/explicitly</emphasis>
158 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;set&#32;to&#32;None&#32;will&#32;be&#32;assigned&#32;a&#32;default&#32;value.&#32;The&#32;recommend</emphasis>
159 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;use&#32;is&#32;keyword&#32;arguments&#32;as&#32;this&#32;is&#32;more&#32;robust&#32;to&#32;future&#32;message</emphasis>
160 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;changes.&#32;&#32;You&#32;cannot&#32;mix&#32;in-order&#32;arguments&#32;and&#32;keyword&#32;arguments.</emphasis>
161 <emphasis class="stringliteral"></emphasis>
162 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;The&#32;available&#32;fields&#32;are:</emphasis>
163 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;action_goal,action_result,action_feedback</emphasis>
164 <emphasis class="stringliteral"></emphasis>
165 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;:param&#32;args:&#32;complete&#32;set&#32;of&#32;field&#32;values,&#32;in&#32;.msg&#32;order</emphasis>
166 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;:param&#32;kwds:&#32;use&#32;keyword&#32;arguments&#32;corresponding&#32;to&#32;message&#32;field&#32;names</emphasis>
167 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;to&#32;set&#32;specific&#32;fields.</emphasis>
168 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
169 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;args&#32;<emphasis class="keywordflow">or</emphasis>&#32;kwds:
170 &#32;&#32;&#32;&#32;&#32;&#32;super(ArmPoseAction,&#32;self).<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a6deb87aa69978cf47e5a8e8a0887a8fa">__init__</link>(*args,&#32;**kwds)
171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">#message&#32;fields&#32;cannot&#32;be&#32;None,&#32;assign&#32;default&#32;values&#32;for&#32;those&#32;that&#32;are</emphasis>
172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ababc0bb07c8926c3e8d55dfd2ddacdf4">action_goal</link>&#32;<emphasis class="keywordflow">is</emphasis>&#32;<emphasis class="keywordtype">None</emphasis>:
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ababc0bb07c8926c3e8d55dfd2ddacdf4">173 </link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ababc0bb07c8926c3e8d55dfd2ddacdf4">action_goal</link>&#32;=&#32;<link linkend="d7/d65/classjaco__msgs_1_1msg_1_1__ArmPoseActionGoal_1_1ArmPoseActionGoal">jaco_msgs.msg.ArmPoseActionGoal</link>()
174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15c3aa8e8baead8d23478de23af61ca0">action_result</link>&#32;<emphasis class="keywordflow">is</emphasis>&#32;<emphasis class="keywordtype">None</emphasis>:
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15c3aa8e8baead8d23478de23af61ca0">175 </link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15c3aa8e8baead8d23478de23af61ca0">action_result</link>&#32;=&#32;<link linkend="dc/de8/classjaco__msgs_1_1msg_1_1__ArmPoseActionResult_1_1ArmPoseActionResult">jaco_msgs.msg.ArmPoseActionResult</link>()
176 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a4e1fca881430990eb71fe999027640aa">action_feedback</link>&#32;<emphasis class="keywordflow">is</emphasis>&#32;<emphasis class="keywordtype">None</emphasis>:
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a4e1fca881430990eb71fe999027640aa">177 </link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a4e1fca881430990eb71fe999027640aa">action_feedback</link>&#32;=&#32;<link linkend="d2/da4/classjaco__msgs_1_1msg_1_1__ArmPoseActionFeedback_1_1ArmPoseActionFeedback">jaco_msgs.msg.ArmPoseActionFeedback</link>()
178 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
179 &#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ababc0bb07c8926c3e8d55dfd2ddacdf4">action_goal</link>&#32;=&#32;<link linkend="d7/d65/classjaco__msgs_1_1msg_1_1__ArmPoseActionGoal_1_1ArmPoseActionGoal">jaco_msgs.msg.ArmPoseActionGoal</link>()
180 &#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15c3aa8e8baead8d23478de23af61ca0">action_result</link>&#32;=&#32;<link linkend="dc/de8/classjaco__msgs_1_1msg_1_1__ArmPoseActionResult_1_1ArmPoseActionResult">jaco_msgs.msg.ArmPoseActionResult</link>()
181 &#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a4e1fca881430990eb71fe999027640aa">action_feedback</link>&#32;=&#32;<link linkend="d2/da4/classjaco__msgs_1_1msg_1_1__ArmPoseActionFeedback_1_1ArmPoseActionFeedback">jaco_msgs.msg.ArmPoseActionFeedback</link>()
182 
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1aa07a489ae049c4f96def03fbb0a7893d">183 </link>&#32;&#32;<emphasis class="keyword">def&#32;</emphasis><link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1aa07a489ae049c4f96def03fbb0a7893d">_get_types</link>(self):
184 &#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;&quot;&quot;</emphasis>
185 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;internal&#32;API&#32;method</emphasis>
186 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
187 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1afa6ebc65498cb429b5abf5561c7889b5">_slot_types</link>
188 
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ab667d2d96dc44cf52c0c01d92d201efa">189 </link>&#32;&#32;<emphasis class="keyword">def&#32;</emphasis><link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ab667d2d96dc44cf52c0c01d92d201efa">serialize</link>(self,&#32;buff):
190 &#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;&quot;&quot;</emphasis>
191 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;serialize&#32;message&#32;into&#32;buffer</emphasis>
192 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;:param&#32;buff:&#32;buffer,&#32;``StringIO``</emphasis>
193 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
194 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">try</emphasis>:
195 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
196 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_3I.pack(_x.action_goal.header.seq,&#32;_x.action_goal.header.stamp.secs,&#32;_x.action_goal.header.stamp.nsecs))
197 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_goal.header.frame_id
198 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
199 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
202 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
203 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
204 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_2I.pack(_x.action_goal.goal_id.stamp.secs,&#32;_x.action_goal.goal_id.stamp.nsecs))
205 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_goal.goal_id.id
206 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
207 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
210 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
211 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
212 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_3I.pack(_x.action_goal.goal.pose.header.seq,&#32;_x.action_goal.goal.pose.header.stamp.secs,&#32;_x.action_goal.goal.pose.header.stamp.nsecs))
213 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_goal.goal.pose.header.frame_id
214 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
218 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
219 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
220 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_7d3I.pack(_x.action_goal.goal.pose.pose.position.x,&#32;_x.action_goal.goal.pose.pose.position.y,&#32;_x.action_goal.goal.pose.pose.position.z,&#32;_x.action_goal.goal.pose.pose.orientation.x,&#32;_x.action_goal.goal.pose.pose.orientation.y,&#32;_x.action_goal.goal.pose.pose.orientation.z,&#32;_x.action_goal.goal.pose.pose.orientation.w,&#32;_x.action_result.header.seq,&#32;_x.action_result.header.stamp.secs,&#32;_x.action_result.header.stamp.nsecs))
221 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_result.header.frame_id
222 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
223 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
226 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
227 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
228 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_2I.pack(_x.action_result.status.goal_id.stamp.secs,&#32;_x.action_result.status.goal_id.stamp.nsecs))
229 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_result.status.goal_id.id
230 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
234 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
235 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_B.pack(self.action_result.status.status))
236 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_result.status.text
237 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
238 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
241 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
242 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
243 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_3I.pack(_x.action_result.result.pose.header.seq,&#32;_x.action_result.result.pose.header.stamp.secs,&#32;_x.action_result.result.pose.header.stamp.nsecs))
244 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_result.result.pose.header.frame_id
245 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
246 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
249 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
250 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
251 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_7d3I.pack(_x.action_result.result.pose.pose.position.x,&#32;_x.action_result.result.pose.pose.position.y,&#32;_x.action_result.result.pose.pose.position.z,&#32;_x.action_result.result.pose.pose.orientation.x,&#32;_x.action_result.result.pose.pose.orientation.y,&#32;_x.action_result.result.pose.pose.orientation.z,&#32;_x.action_result.result.pose.pose.orientation.w,&#32;_x.action_feedback.header.seq,&#32;_x.action_feedback.header.stamp.secs,&#32;_x.action_feedback.header.stamp.nsecs))
252 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_feedback.header.frame_id
253 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
254 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
257 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
258 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
259 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_2I.pack(_x.action_feedback.status.goal_id.stamp.secs,&#32;_x.action_feedback.status.goal_id.stamp.nsecs))
260 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_feedback.status.goal_id.id
261 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
262 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
265 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
266 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_B.pack(self.action_feedback.status.status))
267 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_feedback.status.text
268 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
269 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
272 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
273 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
274 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_3I.pack(_x.action_feedback.feedback.pose.header.seq,&#32;_x.action_feedback.feedback.pose.header.stamp.secs,&#32;_x.action_feedback.feedback.pose.header.stamp.nsecs))
275 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_feedback.feedback.pose.header.frame_id
276 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
277 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
280 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
281 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
282 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_7d.pack(_x.action_feedback.feedback.pose.pose.position.x,&#32;_x.action_feedback.feedback.pose.pose.position.y,&#32;_x.action_feedback.feedback.pose.pose.position.z,&#32;_x.action_feedback.feedback.pose.pose.orientation.x,&#32;_x.action_feedback.feedback.pose.pose.orientation.y,&#32;_x.action_feedback.feedback.pose.pose.orientation.z,&#32;_x.action_feedback.feedback.pose.pose.orientation.w))
283 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">except</emphasis>&#32;struct.error&#32;<emphasis class="keyword">as</emphasis>&#32;se:&#32;self._check_types(struct.error(<emphasis class="stringliteral">&quot;%s:&#32;&apos;%s&apos;&#32;when&#32;writing&#32;&apos;%s&apos;&quot;</emphasis>&#32;%&#32;(type(se),&#32;str(se),&#32;str(_x))))
284 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">except</emphasis>&#32;TypeError&#32;<emphasis class="keyword">as</emphasis>&#32;te:&#32;self._check_types(ValueError(<emphasis class="stringliteral">&quot;%s:&#32;&apos;%s&apos;&#32;when&#32;writing&#32;&apos;%s&apos;&quot;</emphasis>&#32;%&#32;(type(te),&#32;str(te),&#32;str(_x))))
285 
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15aec4f7f7b31cd323152ca28eb8c0d6">286 </link>&#32;&#32;<emphasis class="keyword">def&#32;</emphasis><link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15aec4f7f7b31cd323152ca28eb8c0d6">deserialize</link>(self,&#32;str):
287 &#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;&quot;&quot;</emphasis>
288 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;unpack&#32;serialized&#32;message&#32;in&#32;str&#32;into&#32;this&#32;message&#32;instance</emphasis>
289 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;:param&#32;str:&#32;byte&#32;array&#32;of&#32;serialized&#32;message,&#32;``str``</emphasis>
290 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
291 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">try</emphasis>:
292 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ababc0bb07c8926c3e8d55dfd2ddacdf4">action_goal</link>&#32;<emphasis class="keywordflow">is</emphasis>&#32;<emphasis class="keywordtype">None</emphasis>:
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ababc0bb07c8926c3e8d55dfd2ddacdf4">action_goal</link>&#32;=&#32;<link linkend="d7/d65/classjaco__msgs_1_1msg_1_1__ArmPoseActionGoal_1_1ArmPoseActionGoal">jaco_msgs.msg.ArmPoseActionGoal</link>()
294 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15c3aa8e8baead8d23478de23af61ca0">action_result</link>&#32;<emphasis class="keywordflow">is</emphasis>&#32;<emphasis class="keywordtype">None</emphasis>:
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15c3aa8e8baead8d23478de23af61ca0">action_result</link>&#32;=&#32;<link linkend="dc/de8/classjaco__msgs_1_1msg_1_1__ArmPoseActionResult_1_1ArmPoseActionResult">jaco_msgs.msg.ArmPoseActionResult</link>()
296 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a4e1fca881430990eb71fe999027640aa">action_feedback</link>&#32;<emphasis class="keywordflow">is</emphasis>&#32;<emphasis class="keywordtype">None</emphasis>:
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a4e1fca881430990eb71fe999027640aa">action_feedback</link>&#32;=&#32;<link linkend="d2/da4/classjaco__msgs_1_1msg_1_1__ArmPoseActionFeedback_1_1ArmPoseActionFeedback">jaco_msgs.msg.ArmPoseActionFeedback</link>()
298 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;=&#32;0
299 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
300 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
301 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;12
302 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_goal.header.seq,&#32;_x.action_goal.header.stamp.secs,&#32;_x.action_goal.header.stamp.nsecs,)&#32;=&#32;_struct_3I.unpack(str[start:end])
303 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
304 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
305 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
306 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
307 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
308 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
310 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.header.frame_id&#32;=&#32;str[start:end]
312 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
313 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
314 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;8
315 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_goal.goal_id.stamp.secs,&#32;_x.action_goal.goal_id.stamp.nsecs,)&#32;=&#32;_struct_2I.unpack(str[start:end])
316 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
317 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
318 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
319 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
320 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
321 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.goal_id.id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
323 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.goal_id.id&#32;=&#32;str[start:end]
325 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
326 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
327 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;12
328 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_goal.goal.pose.header.seq,&#32;_x.action_goal.goal.pose.header.stamp.secs,&#32;_x.action_goal.goal.pose.header.stamp.nsecs,)&#32;=&#32;_struct_3I.unpack(str[start:end])
329 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
330 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
331 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
332 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
333 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
334 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.goal.pose.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
336 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.goal.pose.header.frame_id&#32;=&#32;str[start:end]
338 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
339 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
340 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;68
341 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_goal.goal.pose.pose.position.x,&#32;_x.action_goal.goal.pose.pose.position.y,&#32;_x.action_goal.goal.pose.pose.position.z,&#32;_x.action_goal.goal.pose.pose.orientation.x,&#32;_x.action_goal.goal.pose.pose.orientation.y,&#32;_x.action_goal.goal.pose.pose.orientation.z,&#32;_x.action_goal.goal.pose.pose.orientation.w,&#32;_x.action_result.header.seq,&#32;_x.action_result.header.stamp.secs,&#32;_x.action_result.header.stamp.nsecs,)&#32;=&#32;_struct_7d3I.unpack(str[start:end])
342 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
343 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
344 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
345 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
346 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
347 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
349 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.header.frame_id&#32;=&#32;str[start:end]
351 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
352 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
353 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;8
354 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_result.status.goal_id.stamp.secs,&#32;_x.action_result.status.goal_id.stamp.nsecs,)&#32;=&#32;_struct_2I.unpack(str[start:end])
355 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
356 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
357 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
358 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
359 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
360 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.status.goal_id.id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
362 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.status.goal_id.id&#32;=&#32;str[start:end]
364 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
365 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;1
366 &#32;&#32;&#32;&#32;&#32;&#32;(self.action_result.status.status,)&#32;=&#32;_struct_B.unpack(str[start:end])
367 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
368 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
369 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
370 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
371 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
372 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.status.text&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
374 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.status.text&#32;=&#32;str[start:end]
376 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
377 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
378 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;12
379 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_result.result.pose.header.seq,&#32;_x.action_result.result.pose.header.stamp.secs,&#32;_x.action_result.result.pose.header.stamp.nsecs,)&#32;=&#32;_struct_3I.unpack(str[start:end])
380 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
381 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
382 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
383 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
384 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
385 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.result.pose.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
387 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.result.pose.header.frame_id&#32;=&#32;str[start:end]
389 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
390 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
391 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;68
392 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_result.result.pose.pose.position.x,&#32;_x.action_result.result.pose.pose.position.y,&#32;_x.action_result.result.pose.pose.position.z,&#32;_x.action_result.result.pose.pose.orientation.x,&#32;_x.action_result.result.pose.pose.orientation.y,&#32;_x.action_result.result.pose.pose.orientation.z,&#32;_x.action_result.result.pose.pose.orientation.w,&#32;_x.action_feedback.header.seq,&#32;_x.action_feedback.header.stamp.secs,&#32;_x.action_feedback.header.stamp.nsecs,)&#32;=&#32;_struct_7d3I.unpack(str[start:end])
393 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
394 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
395 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
396 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
397 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
398 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
400 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.header.frame_id&#32;=&#32;str[start:end]
402 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
403 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
404 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;8
405 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_feedback.status.goal_id.stamp.secs,&#32;_x.action_feedback.status.goal_id.stamp.nsecs,)&#32;=&#32;_struct_2I.unpack(str[start:end])
406 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
407 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
408 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
409 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
410 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
411 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.status.goal_id.id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
413 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.status.goal_id.id&#32;=&#32;str[start:end]
415 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
416 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;1
417 &#32;&#32;&#32;&#32;&#32;&#32;(self.action_feedback.status.status,)&#32;=&#32;_struct_B.unpack(str[start:end])
418 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
419 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
420 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
421 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
422 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
423 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.status.text&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
425 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.status.text&#32;=&#32;str[start:end]
427 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
428 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
429 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;12
430 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_feedback.feedback.pose.header.seq,&#32;_x.action_feedback.feedback.pose.header.stamp.secs,&#32;_x.action_feedback.feedback.pose.header.stamp.nsecs,)&#32;=&#32;_struct_3I.unpack(str[start:end])
431 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
432 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
433 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
434 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
435 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
436 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.feedback.pose.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
438 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.feedback.pose.header.frame_id&#32;=&#32;str[start:end]
440 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
441 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
442 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;56
443 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_feedback.feedback.pose.pose.position.x,&#32;_x.action_feedback.feedback.pose.pose.position.y,&#32;_x.action_feedback.feedback.pose.pose.position.z,&#32;_x.action_feedback.feedback.pose.pose.orientation.x,&#32;_x.action_feedback.feedback.pose.pose.orientation.y,&#32;_x.action_feedback.feedback.pose.pose.orientation.z,&#32;_x.action_feedback.feedback.pose.pose.orientation.w,)&#32;=&#32;_struct_7d.unpack(str[start:end])
444 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;self
445 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">except</emphasis>&#32;struct.error&#32;<emphasis class="keyword">as</emphasis>&#32;e:
446 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">raise</emphasis>&#32;genpy.DeserializationError(e)&#32;<emphasis class="comment">#most&#32;likely&#32;buffer&#32;underfill</emphasis>
447 
448 
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a91509d4135ea5cce376ed8e089cdbd1f">449 </link>&#32;&#32;<emphasis class="keyword">def&#32;</emphasis><link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a91509d4135ea5cce376ed8e089cdbd1f">serialize_numpy</link>(self,&#32;buff,&#32;numpy):
450 &#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;&quot;&quot;</emphasis>
451 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;serialize&#32;message&#32;with&#32;numpy&#32;array&#32;types&#32;into&#32;buffer</emphasis>
452 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;:param&#32;buff:&#32;buffer,&#32;``StringIO``</emphasis>
453 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;:param&#32;numpy:&#32;numpy&#32;python&#32;module</emphasis>
454 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
455 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">try</emphasis>:
456 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
457 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_3I.pack(_x.action_goal.header.seq,&#32;_x.action_goal.header.stamp.secs,&#32;_x.action_goal.header.stamp.nsecs))
458 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_goal.header.frame_id
459 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
460 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
463 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
464 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
465 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_2I.pack(_x.action_goal.goal_id.stamp.secs,&#32;_x.action_goal.goal_id.stamp.nsecs))
466 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_goal.goal_id.id
467 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
468 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
471 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
472 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
473 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_3I.pack(_x.action_goal.goal.pose.header.seq,&#32;_x.action_goal.goal.pose.header.stamp.secs,&#32;_x.action_goal.goal.pose.header.stamp.nsecs))
474 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_goal.goal.pose.header.frame_id
475 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
476 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
479 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
480 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
481 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_7d3I.pack(_x.action_goal.goal.pose.pose.position.x,&#32;_x.action_goal.goal.pose.pose.position.y,&#32;_x.action_goal.goal.pose.pose.position.z,&#32;_x.action_goal.goal.pose.pose.orientation.x,&#32;_x.action_goal.goal.pose.pose.orientation.y,&#32;_x.action_goal.goal.pose.pose.orientation.z,&#32;_x.action_goal.goal.pose.pose.orientation.w,&#32;_x.action_result.header.seq,&#32;_x.action_result.header.stamp.secs,&#32;_x.action_result.header.stamp.nsecs))
482 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_result.header.frame_id
483 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
484 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
487 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
488 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
489 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_2I.pack(_x.action_result.status.goal_id.stamp.secs,&#32;_x.action_result.status.goal_id.stamp.nsecs))
490 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_result.status.goal_id.id
491 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
492 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
495 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
496 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_B.pack(self.action_result.status.status))
497 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_result.status.text
498 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
499 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
502 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
503 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
504 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_3I.pack(_x.action_result.result.pose.header.seq,&#32;_x.action_result.result.pose.header.stamp.secs,&#32;_x.action_result.result.pose.header.stamp.nsecs))
505 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_result.result.pose.header.frame_id
506 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
507 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
510 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
511 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
512 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_7d3I.pack(_x.action_result.result.pose.pose.position.x,&#32;_x.action_result.result.pose.pose.position.y,&#32;_x.action_result.result.pose.pose.position.z,&#32;_x.action_result.result.pose.pose.orientation.x,&#32;_x.action_result.result.pose.pose.orientation.y,&#32;_x.action_result.result.pose.pose.orientation.z,&#32;_x.action_result.result.pose.pose.orientation.w,&#32;_x.action_feedback.header.seq,&#32;_x.action_feedback.header.stamp.secs,&#32;_x.action_feedback.header.stamp.nsecs))
513 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_feedback.header.frame_id
514 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
515 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
518 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
519 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
520 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_2I.pack(_x.action_feedback.status.goal_id.stamp.secs,&#32;_x.action_feedback.status.goal_id.stamp.nsecs))
521 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_feedback.status.goal_id.id
522 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
523 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
526 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
527 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_B.pack(self.action_feedback.status.status))
528 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_feedback.status.text
529 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
530 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
533 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
534 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
535 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_3I.pack(_x.action_feedback.feedback.pose.header.seq,&#32;_x.action_feedback.feedback.pose.header.stamp.secs,&#32;_x.action_feedback.feedback.pose.header.stamp.nsecs))
536 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self.action_feedback.feedback.pose.header.frame_id
537 &#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
538 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3&#32;<emphasis class="keywordflow">or</emphasis>&#32;type(_x)&#32;==&#32;unicode:
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;_x.encode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length&#32;=&#32;len(_x)
541 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(struct.pack(<emphasis class="stringliteral">&apos;&lt;I%ss&apos;</emphasis>%length,&#32;length,&#32;_x))
542 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
543 &#32;&#32;&#32;&#32;&#32;&#32;buff.write(_struct_7d.pack(_x.action_feedback.feedback.pose.pose.position.x,&#32;_x.action_feedback.feedback.pose.pose.position.y,&#32;_x.action_feedback.feedback.pose.pose.position.z,&#32;_x.action_feedback.feedback.pose.pose.orientation.x,&#32;_x.action_feedback.feedback.pose.pose.orientation.y,&#32;_x.action_feedback.feedback.pose.pose.orientation.z,&#32;_x.action_feedback.feedback.pose.pose.orientation.w))
544 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">except</emphasis>&#32;struct.error&#32;<emphasis class="keyword">as</emphasis>&#32;se:&#32;self._check_types(struct.error(<emphasis class="stringliteral">&quot;%s:&#32;&apos;%s&apos;&#32;when&#32;writing&#32;&apos;%s&apos;&quot;</emphasis>&#32;%&#32;(type(se),&#32;str(se),&#32;str(_x))))
545 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">except</emphasis>&#32;TypeError&#32;<emphasis class="keyword">as</emphasis>&#32;te:&#32;self._check_types(ValueError(<emphasis class="stringliteral">&quot;%s:&#32;&apos;%s&apos;&#32;when&#32;writing&#32;&apos;%s&apos;&quot;</emphasis>&#32;%&#32;(type(te),&#32;str(te),&#32;str(_x))))
546 
<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1aea2da209af900a77da7ec05d4594421e">547 </link>&#32;&#32;<emphasis class="keyword">def&#32;</emphasis><link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1aea2da209af900a77da7ec05d4594421e">deserialize_numpy</link>(self,&#32;str,&#32;numpy):
548 &#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;&quot;&quot;</emphasis>
549 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;unpack&#32;serialized&#32;message&#32;in&#32;str&#32;into&#32;this&#32;message&#32;instance&#32;using&#32;numpy&#32;for&#32;array&#32;types</emphasis>
550 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;:param&#32;str:&#32;byte&#32;array&#32;of&#32;serialized&#32;message,&#32;``str``</emphasis>
551 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;:param&#32;numpy:&#32;numpy&#32;python&#32;module</emphasis>
552 <emphasis class="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
553 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">try</emphasis>:
554 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ababc0bb07c8926c3e8d55dfd2ddacdf4">action_goal</link>&#32;<emphasis class="keywordflow">is</emphasis>&#32;<emphasis class="keywordtype">None</emphasis>:
555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1ababc0bb07c8926c3e8d55dfd2ddacdf4">action_goal</link>&#32;=&#32;<link linkend="d7/d65/classjaco__msgs_1_1msg_1_1__ArmPoseActionGoal_1_1ArmPoseActionGoal">jaco_msgs.msg.ArmPoseActionGoal</link>()
556 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15c3aa8e8baead8d23478de23af61ca0">action_result</link>&#32;<emphasis class="keywordflow">is</emphasis>&#32;<emphasis class="keywordtype">None</emphasis>:
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a15c3aa8e8baead8d23478de23af61ca0">action_result</link>&#32;=&#32;<link linkend="dc/de8/classjaco__msgs_1_1msg_1_1__ArmPoseActionResult_1_1ArmPoseActionResult">jaco_msgs.msg.ArmPoseActionResult</link>()
558 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a4e1fca881430990eb71fe999027640aa">action_feedback</link>&#32;<emphasis class="keywordflow">is</emphasis>&#32;<emphasis class="keywordtype">None</emphasis>:
559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="d7/da3/classjaco__msgs_1_1msg_1_1__ArmPoseAction_1_1ArmPoseAction_1a4e1fca881430990eb71fe999027640aa">action_feedback</link>&#32;=&#32;<link linkend="d2/da4/classjaco__msgs_1_1msg_1_1__ArmPoseActionFeedback_1_1ArmPoseActionFeedback">jaco_msgs.msg.ArmPoseActionFeedback</link>()
560 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;=&#32;0
561 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
562 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
563 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;12
564 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_goal.header.seq,&#32;_x.action_goal.header.stamp.secs,&#32;_x.action_goal.header.stamp.nsecs,)&#32;=&#32;_struct_3I.unpack(str[start:end])
565 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
566 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
567 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
568 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
569 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
570 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
572 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.header.frame_id&#32;=&#32;str[start:end]
574 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
575 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
576 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;8
577 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_goal.goal_id.stamp.secs,&#32;_x.action_goal.goal_id.stamp.nsecs,)&#32;=&#32;_struct_2I.unpack(str[start:end])
578 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
579 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
580 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
581 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
582 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
583 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.goal_id.id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
585 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.goal_id.id&#32;=&#32;str[start:end]
587 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
588 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
589 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;12
590 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_goal.goal.pose.header.seq,&#32;_x.action_goal.goal.pose.header.stamp.secs,&#32;_x.action_goal.goal.pose.header.stamp.nsecs,)&#32;=&#32;_struct_3I.unpack(str[start:end])
591 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
592 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
593 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
594 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
595 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
596 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.goal.pose.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
598 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_goal.goal.pose.header.frame_id&#32;=&#32;str[start:end]
600 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
601 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
602 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;68
603 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_goal.goal.pose.pose.position.x,&#32;_x.action_goal.goal.pose.pose.position.y,&#32;_x.action_goal.goal.pose.pose.position.z,&#32;_x.action_goal.goal.pose.pose.orientation.x,&#32;_x.action_goal.goal.pose.pose.orientation.y,&#32;_x.action_goal.goal.pose.pose.orientation.z,&#32;_x.action_goal.goal.pose.pose.orientation.w,&#32;_x.action_result.header.seq,&#32;_x.action_result.header.stamp.secs,&#32;_x.action_result.header.stamp.nsecs,)&#32;=&#32;_struct_7d3I.unpack(str[start:end])
604 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
605 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
606 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
607 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
608 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
609 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
611 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.header.frame_id&#32;=&#32;str[start:end]
613 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
614 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
615 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;8
616 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_result.status.goal_id.stamp.secs,&#32;_x.action_result.status.goal_id.stamp.nsecs,)&#32;=&#32;_struct_2I.unpack(str[start:end])
617 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
618 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
619 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
620 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
621 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
622 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.status.goal_id.id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
624 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.status.goal_id.id&#32;=&#32;str[start:end]
626 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
627 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;1
628 &#32;&#32;&#32;&#32;&#32;&#32;(self.action_result.status.status,)&#32;=&#32;_struct_B.unpack(str[start:end])
629 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
630 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
631 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
632 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
633 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
634 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.status.text&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
636 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.status.text&#32;=&#32;str[start:end]
638 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
639 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
640 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;12
641 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_result.result.pose.header.seq,&#32;_x.action_result.result.pose.header.stamp.secs,&#32;_x.action_result.result.pose.header.stamp.nsecs,)&#32;=&#32;_struct_3I.unpack(str[start:end])
642 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
643 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
644 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
645 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
646 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
647 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.result.pose.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
649 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_result.result.pose.header.frame_id&#32;=&#32;str[start:end]
651 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
652 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
653 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;68
654 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_result.result.pose.pose.position.x,&#32;_x.action_result.result.pose.pose.position.y,&#32;_x.action_result.result.pose.pose.position.z,&#32;_x.action_result.result.pose.pose.orientation.x,&#32;_x.action_result.result.pose.pose.orientation.y,&#32;_x.action_result.result.pose.pose.orientation.z,&#32;_x.action_result.result.pose.pose.orientation.w,&#32;_x.action_feedback.header.seq,&#32;_x.action_feedback.header.stamp.secs,&#32;_x.action_feedback.header.stamp.nsecs,)&#32;=&#32;_struct_7d3I.unpack(str[start:end])
655 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
656 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
657 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
658 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
659 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
660 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
662 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.header.frame_id&#32;=&#32;str[start:end]
664 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
665 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
666 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;8
667 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_feedback.status.goal_id.stamp.secs,&#32;_x.action_feedback.status.goal_id.stamp.nsecs,)&#32;=&#32;_struct_2I.unpack(str[start:end])
668 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
669 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
670 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
671 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
672 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
673 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.status.goal_id.id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
675 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.status.goal_id.id&#32;=&#32;str[start:end]
677 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
678 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;1
679 &#32;&#32;&#32;&#32;&#32;&#32;(self.action_feedback.status.status,)&#32;=&#32;_struct_B.unpack(str[start:end])
680 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
681 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
682 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
683 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
684 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
685 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.status.text&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
687 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.status.text&#32;=&#32;str[start:end]
689 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
690 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
691 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;12
692 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_feedback.feedback.pose.header.seq,&#32;_x.action_feedback.feedback.pose.header.stamp.secs,&#32;_x.action_feedback.feedback.pose.header.stamp.nsecs,)&#32;=&#32;_struct_3I.unpack(str[start:end])
693 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
694 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;4
695 &#32;&#32;&#32;&#32;&#32;&#32;(length,)&#32;=&#32;_struct_I.unpack(str[start:end])
696 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
697 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;length
698 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;python3:
699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.feedback.pose.header.frame_id&#32;=&#32;str[start:end].decode(<emphasis class="stringliteral">&apos;utf-8&apos;</emphasis>)
700 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>:
701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.action_feedback.feedback.pose.header.frame_id&#32;=&#32;str[start:end]
702 &#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;self
703 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end
704 &#32;&#32;&#32;&#32;&#32;&#32;end&#32;+=&#32;56
705 &#32;&#32;&#32;&#32;&#32;&#32;(_x.action_feedback.feedback.pose.pose.position.x,&#32;_x.action_feedback.feedback.pose.pose.position.y,&#32;_x.action_feedback.feedback.pose.pose.position.z,&#32;_x.action_feedback.feedback.pose.pose.orientation.x,&#32;_x.action_feedback.feedback.pose.pose.orientation.y,&#32;_x.action_feedback.feedback.pose.pose.orientation.z,&#32;_x.action_feedback.feedback.pose.pose.orientation.w,)&#32;=&#32;_struct_7d.unpack(str[start:end])
706 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;self
707 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">except</emphasis>&#32;struct.error&#32;<emphasis class="keyword">as</emphasis>&#32;e:
708 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">raise</emphasis>&#32;genpy.DeserializationError(e)&#32;<emphasis class="comment">#most&#32;likely&#32;buffer&#32;underfill</emphasis>
709 
<link linkend="d4/dfb/namespacejaco__msgs_1_1msg_1_1__ArmPoseAction_1af2bc9f79d3d398623852812391777c44">710 </link>_struct_I&#32;=&#32;genpy.struct_I
<link linkend="d4/dfb/namespacejaco__msgs_1_1msg_1_1__ArmPoseAction_1a11678fc4e6bf27a79d7bfb6e1979b212">711 </link>_struct_3I&#32;=&#32;struct.Struct(<emphasis class="stringliteral">&quot;&lt;3I&quot;</emphasis>)
<link linkend="d4/dfb/namespacejaco__msgs_1_1msg_1_1__ArmPoseAction_1ab59a5638df43528a874370a6d310fb69">712 </link>_struct_B&#32;=&#32;struct.Struct(<emphasis class="stringliteral">&quot;&lt;B&quot;</emphasis>)
<link linkend="d4/dfb/namespacejaco__msgs_1_1msg_1_1__ArmPoseAction_1aaad2631884bd641947b0edeca27b7956">713 </link>_struct_7d&#32;=&#32;struct.Struct(<emphasis class="stringliteral">&quot;&lt;7d&quot;</emphasis>)
<link linkend="d4/dfb/namespacejaco__msgs_1_1msg_1_1__ArmPoseAction_1a6b607ccff20d809f92f5b66593afbf2b">714 </link>_struct_2I&#32;=&#32;struct.Struct(<emphasis class="stringliteral">&quot;&lt;2I&quot;</emphasis>)
<link linkend="d4/dfb/namespacejaco__msgs_1_1msg_1_1__ArmPoseAction_1a1f93f507b06f93e869ad7afd037428be">715 </link>_struct_7d3I&#32;=&#32;struct.Struct(<emphasis class="stringliteral">&quot;&lt;7d3I&quot;</emphasis>)
    </computeroutput></literallayout>
</section>
