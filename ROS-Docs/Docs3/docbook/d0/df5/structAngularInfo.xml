<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="d0/df5/structAngularInfo">
<title>AngularInfo struct Reference</title>
<para>
    <programlisting>#include <link linkend="df/d36/KinovaTypes_8h">&quot;Definition&quot;</link></programlisting>
</para>
<para>Inheritance diagram for AngularInfo</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../d4/d78/structAngularInfo__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for AngularInfo</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../d3/db8/structAngularInfo__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Public Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>float Actuator1<para><emphasis>This is the value related to the first actuator. Unit depends on the context it&apos;s been used.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>float Actuator2<para><emphasis>This is the value related to the second actuator. Unit depends on the context it&apos;s been used.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>float Actuator3<para><emphasis>This is the value related to the third actuator. Unit depends on the context it&apos;s been used.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>float Actuator4<para><emphasis>This is the value related to the actuator #4. Unit depends on the context it&apos;s been used.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>float Actuator5<para><emphasis>This is the value related to the actuator #5. Unit depends on the context it&apos;s been used.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>float Actuator6<para><emphasis>This is the value related to the actuator #6. Unit depends on the context it&apos;s been used.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d0/df5/structAngularInfo_1a092156b3e0e6cb657ed4bb2f6b15a9f0">InitStruct</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>This data structure holds values in an angular(joint by joint) control context. As an example struct could contains position, temperature, torque, ... </para>
    </simplesect>
        <section>
            <title>Member Data Documentation</title>
            <simplesect>
                <title>float AngularInfo::Actuator1</title>                
<para>As an example if the current control mode is angular position the unit will be degree but if the control mode is angular velocity then the unit will be degree per second. </para>

                <para>Definition at line 294 of file KinovaTypes.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>KinovaTypes.h</para></listitem></itemizedlist></para>
            </simplesect>
            <simplesect>
                <title>float AngularInfo::Actuator2</title>                
<para>As an example if the current control mode is angular position the unit will be degree but if the control mode is angular velocity then the unit will be degree per second. </para>

                <para>Definition at line 301 of file KinovaTypes.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>KinovaTypes.h</para></listitem></itemizedlist></para>
            </simplesect>
            <simplesect>
                <title>float AngularInfo::Actuator3</title>                
<para>As an example if the current control mode is angular position the unit will be degree but if the control mode is angular velocity then the unit will be degree per second. </para>

                <para>Definition at line 308 of file KinovaTypes.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>KinovaTypes.h</para></listitem></itemizedlist></para>
            </simplesect>
            <simplesect>
                <title>float AngularInfo::Actuator4</title>                
<para>As an example if the current control mode is angular position the unit will be degree but if the control mode is angular velocity then the unit will be degree per second. </para>

                <para>Definition at line 315 of file KinovaTypes.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>KinovaTypes.h</para></listitem></itemizedlist></para>
            </simplesect>
            <simplesect>
                <title>float AngularInfo::Actuator5</title>                
<para>As an example if the current control mode is angular position the unit will be degree but if the control mode is angular velocity then the unit will be degree per second. </para>

                <para>Definition at line 322 of file KinovaTypes.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>KinovaTypes.h</para></listitem></itemizedlist></para>
            </simplesect>
            <simplesect>
                <title>float AngularInfo::Actuator6</title>                
<para>As an example if the current control mode is angular position the unit will be degree but if the control mode is angular velocity then the unit will be degree per second. </para>

                <para>Definition at line 329 of file KinovaTypes.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>KinovaTypes.h</para></listitem></itemizedlist></para>
            </simplesect>
        </section>
            <section xml:id="d0/df5/structAngularInfo_1a092156b3e0e6cb657ed4bb2f6b15a9f0">
                <title>void AngularInfo::InitStruct ()</title> <emphasis></emphasis>
                
<para>This method will initialises all the values to 0 </para>

            </section>
</section>
