.TH "ros::message_traits::Definition< ::jaco_msgs::ArmPoseAction_< ContainerAllocator > >" 3 "Thu Mar 3 2016" "Version 1.0.1" "Kinova-ROS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ros::message_traits::Definition< ::jaco_msgs::ArmPoseAction_< ContainerAllocator > > \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'ArmPoseAction\&.h'\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const char * \fBvalue\fP ()"
.br
.ti -1c
.RI "static const char * \fBvalue\fP (const ::\fBjaco_msgs::ArmPoseAction_\fP< ContainerAllocator > &)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class ContainerAllocator>
.br
struct ros::message_traits::Definition< ::jaco_msgs::ArmPoseAction_< ContainerAllocator > >"

.SH "Member Function Documentation"
.PP 
.SS "template<class ContainerAllocator > static const char* ros::message_traits::Definition< ::\fBjaco_msgs::ArmPoseAction_\fP< ContainerAllocator > >::value ()\fC [inline]\fP, \fC [static]\fP"

.PP
.nf
185   {
186     return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
187 \n\
188 ArmPoseActionGoal action_goal\n\
189 ArmPoseActionResult action_result\n\
190 ArmPoseActionFeedback action_feedback\n\
191 \n\
192 ================================================================================\n\
193 MSG: jaco_msgs/ArmPoseActionGoal\n\
194 # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
195 \n\
196 Header header\n\
197 actionlib_msgs/GoalID goal_id\n\
198 ArmPoseGoal goal\n\
199 \n\
200 ================================================================================\n\
201 MSG: std_msgs/Header\n\
202 # Standard metadata for higher-level stamped data types\&.\n\
203 # This is generally used to communicate timestamped data \n\
204 # in a particular coordinate frame\&.\n\
205 # \n\
206 # sequence ID: consecutively increasing ID \n\
207 uint32 seq\n\
208 #Two-integer timestamp that is expressed as:\n\
209 # * stamp\&.secs: seconds (stamp_secs) since epoch\n\
210 # * stamp\&.nsecs: nanoseconds since stamp_secs\n\
211 # time-handling sugar is provided by the client library\n\
212 time stamp\n\
213 #Frame this data is associated with\n\
214 # 0: no frame\n\
215 # 1: global frame\n\
216 string frame_id\n\
217 \n\
218 ================================================================================\n\
219 MSG: actionlib_msgs/GoalID\n\
220 # The stamp should store the time at which this goal was requested\&.\n\
221 # It is used by an action server when it tries to preempt all\n\
222 # goals that were requested before a certain time\n\
223 time stamp\n\
224 \n\
225 # The id provides a way to associate feedback and\n\
226 # result message with specific goal requests\&. The id\n\
227 # specified must be unique\&.\n\
228 string id\n\
229 \n\
230 \n\
231 ================================================================================\n\
232 MSG: jaco_msgs/ArmPoseGoal\n\
233 # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
234 # Goal\n\
235 geometry_msgs/PoseStamped pose\n\
236 \n\
237 ================================================================================\n\
238 MSG: geometry_msgs/PoseStamped\n\
239 # A Pose with reference coordinate frame and timestamp\n\
240 Header header\n\
241 Pose pose\n\
242 \n\
243 ================================================================================\n\
244 MSG: geometry_msgs/Pose\n\
245 # A representation of pose in free space, composed of postion and orientation\&. \n\
246 Point position\n\
247 Quaternion orientation\n\
248 \n\
249 ================================================================================\n\
250 MSG: geometry_msgs/Point\n\
251 # This contains the position of a point in free space\n\
252 float64 x\n\
253 float64 y\n\
254 float64 z\n\
255 \n\
256 ================================================================================\n\
257 MSG: geometry_msgs/Quaternion\n\
258 # This represents an orientation in free space in quaternion form\&.\n\
259 \n\
260 float64 x\n\
261 float64 y\n\
262 float64 z\n\
263 float64 w\n\
264 \n\
265 ================================================================================\n\
266 MSG: jaco_msgs/ArmPoseActionResult\n\
267 # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
268 \n\
269 Header header\n\
270 actionlib_msgs/GoalStatus status\n\
271 ArmPoseResult result\n\
272 \n\
273 ================================================================================\n\
274 MSG: actionlib_msgs/GoalStatus\n\
275 GoalID goal_id\n\
276 uint8 status\n\
277 uint8 PENDING         = 0   # The goal has yet to be processed by the action server\n\
278 uint8 ACTIVE          = 1   # The goal is currently being processed by the action server\n\
279 uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing\n\
280                             #   and has since completed its execution (Terminal State)\n\
281 uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)\n\
282 uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due\n\
283                             #    to some failure (Terminal State)\n\
284 uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,\n\
285                             #    because the goal was unattainable or invalid (Terminal State)\n\
286 uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing\n\
287                             #    and has not yet completed execution\n\
288 uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,\n\
289                             #    but the action server has not yet confirmed that the goal is canceled\n\
290 uint8 RECALLED        = 8   # The goal received a cancel request before it started executing\n\
291                             #    and was successfully cancelled (Terminal State)\n\
292 uint8 LOST            = 9   # An action client can determine that a goal is LOST\&. This should not be\n\
293                             #    sent over the wire by an action server\n\
294 \n\
295 #Allow for the user to associate a string with GoalStatus for debugging\n\
296 string text\n\
297 \n\
298 \n\
299 ================================================================================\n\
300 MSG: jaco_msgs/ArmPoseResult\n\
301 # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
302 # Result\n\
303 geometry_msgs/PoseStamped pose\n\
304 \n\
305 ================================================================================\n\
306 MSG: jaco_msgs/ArmPoseActionFeedback\n\
307 # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
308 \n\
309 Header header\n\
310 actionlib_msgs/GoalStatus status\n\
311 ArmPoseFeedback feedback\n\
312 \n\
313 ================================================================================\n\
314 MSG: jaco_msgs/ArmPoseFeedback\n\
315 # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
316 # Feedback message\n\
317 geometry_msgs/PoseStamped pose\n\
318 \n\
319 ";
320   }
.fi
.SS "template<class ContainerAllocator > static const char* ros::message_traits::Definition< ::\fBjaco_msgs::ArmPoseAction_\fP< ContainerAllocator > >::value (const ::\fBjaco_msgs::ArmPoseAction_\fP< ContainerAllocator > &)\fC [inline]\fP, \fC [static]\fP"

.PP
.nf
322 { return value(); }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Kinova-ROS from the source code\&.
