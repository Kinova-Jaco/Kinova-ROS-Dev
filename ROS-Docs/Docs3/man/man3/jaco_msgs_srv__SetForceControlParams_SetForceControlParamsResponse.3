.TH "jaco_msgs.srv._SetForceControlParams.SetForceControlParamsResponse" 3 "Thu Mar 3 2016" "Version 1.0.1" "Kinova-ROS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jaco_msgs.srv._SetForceControlParams.SetForceControlParamsResponse \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits Message\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self, args, kwds)"
.br
.ti -1c
.RI "def \fBdeserialize\fP (self, str)"
.br
.ti -1c
.RI "def \fBdeserialize_numpy\fP (self, str, numpy)"
.br
.ti -1c
.RI "def \fBserialize\fP (self, buff)"
.br
.ti -1c
.RI "def \fBserialize_numpy\fP (self, buff, numpy)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "def \fB_get_types\fP (self)"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "list \fB__slots__\fP = []"
.br
.ti -1c
.RI "string \fB_full_text\fP"
.br
.ti -1c
.RI "bool \fB_has_header\fP = False"
.br
.ti -1c
.RI "string \fB_md5sum\fP = 'd41d8cd98f00b204e9800998ecf8427e'"
.br
.ti -1c
.RI "list \fB_slot_types\fP = []"
.br
.ti -1c
.RI "string \fB_type\fP = 'jaco_msgs/\fBSetForceControlParamsResponse\fP'"
.br
.in -1c
.SH "Detailed Description"
.PP 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&.__init__ ( self,  args,  kwds)"

.PP
.nf
Constructor. Any message fields that are implicitly/explicitly
set to None will be assigned a default value. The recommend
use is keyword arguments as this is more robust to future message
changes.  You cannot mix in-order arguments and keyword arguments.

The available fields are:
   

:param args: complete set of field values, in .msg order
:param kwds: use keyword arguments corresponding to message field names
to set specific fields.

.fi
.PP
 
.PP
.nf
188   def __init__(self, *args, **kwds):
189     """
190     Constructor\&. Any message fields that are implicitly/explicitly
191     set to None will be assigned a default value\&. The recommend
192     use is keyword arguments as this is more robust to future message
193     changes\&.  You cannot mix in-order arguments and keyword arguments\&.
194 
195     The available fields are:
196        
197 
198     :param args: complete set of field values, in \&.msg order
199     :param kwds: use keyword arguments corresponding to message field names
200     to set specific fields\&.
201     """
202     if args or kwds:
203       super(SetForceControlParamsResponse, self)\&.__init__(*args, **kwds)
204 
.fi
.SH "Member Function Documentation"
.PP 
.SS "def jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&._get_types ( self)\fC [private]\fP"

.PP
.nf
internal API method

.fi
.PP
 
.PP
.nf
205   def _get_types(self):
206     """
207     internal API method
208     """
209     return self\&._slot_types
210 
.fi
.SS "def jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&.deserialize ( self,  str)"

.PP
.nf
unpack serialized message in str into this message instance
:param str: byte array of serialized message, ``str``

.fi
.PP
 
.PP
.nf
221   def deserialize(self, str):
222     """
223     unpack serialized message in str into this message instance
224     :param str: byte array of serialized message, ``str``
225     """
226     try:
227       end = 0
228       return self
229     except struct\&.error as e:
230       raise genpy\&.DeserializationError(e) #most likely buffer underfill
231 
232 
.fi
.SS "def jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&.deserialize_numpy ( self,  str,  numpy)"

.PP
.nf
unpack serialized message in str into this message instance using numpy for array types
:param str: byte array of serialized message, ``str``
:param numpy: numpy python module

.fi
.PP
 
.PP
.nf
244   def deserialize_numpy(self, str, numpy):
245     """
246     unpack serialized message in str into this message instance using numpy for array types
247     :param str: byte array of serialized message, ``str``
248     :param numpy: numpy python module
249     """
250     try:
251       end = 0
252       return self
253     except struct\&.error as e:
254       raise genpy\&.DeserializationError(e) #most likely buffer underfill
255 
.fi
.SS "def jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&.serialize ( self,  buff)"

.PP
.nf
serialize message into buffer
:param buff: buffer, ``StringIO``

.fi
.PP
 
.PP
.nf
211   def serialize(self, buff):
212     """
213     serialize message into buffer
214     :param buff: buffer, ``StringIO``
215     """
216     try:
217       pass
218     except struct\&.error as se: self\&._check_types(struct\&.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(_x))))
219     except TypeError as te: self\&._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(_x))))
220 
.fi
.SS "def jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&.serialize_numpy ( self,  buff,  numpy)"

.PP
.nf
serialize message with numpy array types into buffer
:param buff: buffer, ``StringIO``
:param numpy: numpy python module

.fi
.PP
 
.PP
.nf
233   def serialize_numpy(self, buff, numpy):
234     """
235     serialize message with numpy array types into buffer
236     :param buff: buffer, ``StringIO``
237     :param numpy: numpy python module
238     """
239     try:
240       pass
241     except struct\&.error as se: self\&._check_types(struct\&.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(_x))))
242     except TypeError as te: self\&._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(_x))))
243 
.fi
.SH "Member Data Documentation"
.PP 
.SS "list jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&.__slots__ = []\fC [static]\fP, \fC [private]\fP"

.SS "string jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&._full_text\fC [static]\fP, \fC [private]\fP"
\fBInitial value:\fP
.PP
.nf
1 = """
2 
3 """
.fi
.SS "bool jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&._has_header = False\fC [static]\fP, \fC [private]\fP"

.SS "string jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&._md5sum = 'd41d8cd98f00b204e9800998ecf8427e'\fC [static]\fP, \fC [private]\fP"

.SS "list jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&._slot_types = []\fC [static]\fP, \fC [private]\fP"

.PP
Referenced by jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&._get_types()\&.
.SS "string jaco_msgs\&.srv\&._SetForceControlParams\&.SetForceControlParamsResponse\&._type = 'jaco_msgs/\fBSetForceControlParamsResponse\fP'\fC [static]\fP, \fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Kinova-ROS from the source code\&.
