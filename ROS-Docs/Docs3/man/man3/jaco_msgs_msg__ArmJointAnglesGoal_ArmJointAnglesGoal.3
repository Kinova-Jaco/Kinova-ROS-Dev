.TH "jaco_msgs.msg._ArmJointAnglesGoal.ArmJointAnglesGoal" 3 "Thu Mar 3 2016" "Version 1.0.1" "Kinova-ROS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jaco_msgs.msg._ArmJointAnglesGoal.ArmJointAnglesGoal \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits Message\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self, args, kwds)"
.br
.ti -1c
.RI "def \fBdeserialize\fP (self, str)"
.br
.ti -1c
.RI "def \fBdeserialize_numpy\fP (self, str, numpy)"
.br
.ti -1c
.RI "def \fBserialize\fP (self, buff)"
.br
.ti -1c
.RI "def \fBserialize_numpy\fP (self, buff, numpy)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBangles\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "def \fB_get_types\fP (self)"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "list \fB__slots__\fP = ['\fBangles\fP']"
.br
.ti -1c
.RI "string \fB_full_text\fP"
.br
.ti -1c
.RI "bool \fB_has_header\fP = False"
.br
.ti -1c
.RI "string \fB_md5sum\fP = 'd86b424e9a65a92d0fef7f9d22a2b38f'"
.br
.ti -1c
.RI "list \fB_slot_types\fP = ['jaco_msgs/\fBJointAngles\fP']"
.br
.ti -1c
.RI "string \fB_type\fP = 'jaco_msgs/\fBArmJointAnglesGoal\fP'"
.br
.in -1c
.SH "Detailed Description"
.PP 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.__init__ ( self,  args,  kwds)"

.PP
.nf
Constructor. Any message fields that are implicitly/explicitly
set to None will be assigned a default value. The recommend
use is keyword arguments as this is more robust to future message
changes.  You cannot mix in-order arguments and keyword arguments.

The available fields are:
   angles

:param args: complete set of field values, in .msg order
:param kwds: use keyword arguments corresponding to message field names
to set specific fields.

.fi
.PP
 
.PP
.nf
30   def __init__(self, *args, **kwds):
31     """
32     Constructor\&. Any message fields that are implicitly/explicitly
33     set to None will be assigned a default value\&. The recommend
34     use is keyword arguments as this is more robust to future message
35     changes\&.  You cannot mix in-order arguments and keyword arguments\&.
36 
37     The available fields are:
38        angles
39 
40     :param args: complete set of field values, in \&.msg order
41     :param kwds: use keyword arguments corresponding to message field names
42     to set specific fields\&.
43     """
44     if args or kwds:
45       super(ArmJointAnglesGoal, self)\&.__init__(*args, **kwds)
46       #message fields cannot be None, assign default values for those that are
47       if self\&.angles is None:
48         self\&.angles = jaco_msgs\&.msg\&.JointAngles()
49     else:
50       self\&.angles = jaco_msgs\&.msg\&.JointAngles()
51 
.fi
.SH "Member Function Documentation"
.PP 
.SS "def jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&._get_types ( self)\fC [private]\fP"

.PP
.nf
internal API method

.fi
.PP
 
.PP
.nf
52   def _get_types(self):
53     """
54     internal API method
55     """
56     return self\&._slot_types
57 
.fi
.SS "def jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.deserialize ( self,  str)"

.PP
.nf
unpack serialized message in str into this message instance
:param str: byte array of serialized message, ``str``

.fi
.PP
 
.PP
.nf
69   def deserialize(self, str):
70     """
71     unpack serialized message in str into this message instance
72     :param str: byte array of serialized message, ``str``
73     """
74     try:
75       if self\&.angles is None:
76         self\&.angles = jaco_msgs\&.msg\&.JointAngles()
77       end = 0
78       _x = self
79       start = end
80       end += 24
81       (_x\&.angles\&.joint1, _x\&.angles\&.joint2, _x\&.angles\&.joint3, _x\&.angles\&.joint4, _x\&.angles\&.joint5, _x\&.angles\&.joint6,) = _struct_6f\&.unpack(str[start:end])
82       return self
83     except struct\&.error as e:
84       raise genpy\&.DeserializationError(e) #most likely buffer underfill
85 
86 
.fi
.SS "def jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.deserialize_numpy ( self,  str,  numpy)"

.PP
.nf
unpack serialized message in str into this message instance using numpy for array types
:param str: byte array of serialized message, ``str``
:param numpy: numpy python module

.fi
.PP
 
.PP
.nf
99   def deserialize_numpy(self, str, numpy):
100     """
101     unpack serialized message in str into this message instance using numpy for array types
102     :param str: byte array of serialized message, ``str``
103     :param numpy: numpy python module
104     """
105     try:
106       if self\&.angles is None:
107         self\&.angles = jaco_msgs\&.msg\&.JointAngles()
108       end = 0
109       _x = self
110       start = end
111       end += 24
112       (_x\&.angles\&.joint1, _x\&.angles\&.joint2, _x\&.angles\&.joint3, _x\&.angles\&.joint4, _x\&.angles\&.joint5, _x\&.angles\&.joint6,) = _struct_6f\&.unpack(str[start:end])
113       return self
114     except struct\&.error as e:
115       raise genpy\&.DeserializationError(e) #most likely buffer underfill
116 
.fi
.SS "def jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.serialize ( self,  buff)"

.PP
.nf
serialize message into buffer
:param buff: buffer, ``StringIO``

.fi
.PP
 
.PP
.nf
58   def serialize(self, buff):
59     """
60     serialize message into buffer
61     :param buff: buffer, ``StringIO``
62     """
63     try:
64       _x = self
65       buff\&.write(_struct_6f\&.pack(_x\&.angles\&.joint1, _x\&.angles\&.joint2, _x\&.angles\&.joint3, _x\&.angles\&.joint4, _x\&.angles\&.joint5, _x\&.angles\&.joint6))
66     except struct\&.error as se: self\&._check_types(struct\&.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(_x))))
67     except TypeError as te: self\&._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(_x))))
68 
.fi
.SS "def jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.serialize_numpy ( self,  buff,  numpy)"

.PP
.nf
serialize message with numpy array types into buffer
:param buff: buffer, ``StringIO``
:param numpy: numpy python module

.fi
.PP
 
.PP
.nf
87   def serialize_numpy(self, buff, numpy):
88     """
89     serialize message with numpy array types into buffer
90     :param buff: buffer, ``StringIO``
91     :param numpy: numpy python module
92     """
93     try:
94       _x = self
95       buff\&.write(_struct_6f\&.pack(_x\&.angles\&.joint1, _x\&.angles\&.joint2, _x\&.angles\&.joint3, _x\&.angles\&.joint4, _x\&.angles\&.joint5, _x\&.angles\&.joint6))
96     except struct\&.error as se: self\&._check_types(struct\&.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(_x))))
97     except TypeError as te: self\&._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(_x))))
98 
.fi
.SH "Member Data Documentation"
.PP 
.SS "list jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.__slots__ = ['\fBangles\fP']\fC [static]\fP, \fC [private]\fP"

.SS "string jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&._full_text\fC [static]\fP, \fC [private]\fP"
\fBInitial value:\fP
.PP
.nf
1 = """# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
2 # Goal
3 JointAngles angles
4 
5 ================================================================================
6 MSG: jaco_msgs/JointAngles
7 float32 joint1
8 float32 joint2
9 float32 joint3
10 float32 joint4
11 float32 joint5
12 float32 joint6
13 
14 """
.fi
.SS "bool jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&._has_header = False\fC [static]\fP, \fC [private]\fP"

.SS "string jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&._md5sum = 'd86b424e9a65a92d0fef7f9d22a2b38f'\fC [static]\fP, \fC [private]\fP"

.SS "list jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&._slot_types = ['jaco_msgs/\fBJointAngles\fP']\fC [static]\fP, \fC [private]\fP"

.PP
Referenced by jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&._get_types()\&.
.SS "string jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&._type = 'jaco_msgs/\fBArmJointAnglesGoal\fP'\fC [static]\fP, \fC [private]\fP"

.SS "jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.angles"

.PP
Referenced by jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.__init__(), jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.deserialize(), and jaco_msgs\&.msg\&._ArmJointAnglesGoal\&.ArmJointAnglesGoal\&.deserialize_numpy()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Kinova-ROS from the source code\&.
